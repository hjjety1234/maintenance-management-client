<?xml version="1.0" encoding="utf-8"?>
<!--
 == ============================================================================
 == | WonderTek [ 网络无处不在，沟通及时到达 ]
 == ============================================================================
 == | Copyright (c) 2013, WonderTek, Inc. All Rights Reserved.
 == ============================================================================
-- | Author: gaoyonglei <gaoyonglei@wdit.com.cn>
 == ============================================================================
 == | Desc: 语音输入插件页面
 == ============================================================================
-->
<root>
    <header/>
    <body resolution="480,800" BuildChildrenFinished="bodyBuildChildrenFinished" OnSpriteEvent="bodyOnSpriteEvent" OnPluginEvent="bodyOnPluginEvent">
        <image name='citybgImg' rect="0,0,480,800" src="file://image/bj.png" style="autosize" extendstyle="1111" />
        <node name="mainNode" rect="0,0,480,800" enable="true" active="true" OnKeyUp="mainNodeOnKeyUp" layouttype="1" extendstyle="1111">
            <button name="voice" border="true" rect="150,500,180,53" extendstyle="1010" color="#ffffff"  text="点击输入"  OnSelect="voiceBtnOnSelect" />
		    <label name="voiceText" border="true" rect="50,300,380,153" color="#ffffff" extendstyle="1010" text="输入的文字" />
        </node>
    </body>
<![CDATA[
require('com_wondertek_ydsx.common.framework')
require('framework.voiceinput')

local rootSprite

---------------------------------------callbacks--------------------------------
-- @brief root子节点创建完事件
function bodyBuildChildrenFinished(sprite)
    rootSprite = sprite
    
end

-- @brief root节点消息方法
function bodyOnSpriteEvent(msg, param)
    if msg == MSG_ACTIVATE then -- 页面激活
        local db_path = getLocalDiskPath().."/jttxlDatabase.db"
        if IO:fileExist(db_path) then 
            query_employee(db_path, "江峰")
        else
            Log:write("数据库文件不存在!")
        end
    elseif msg == MSG_DEACTIVATE then
    end
end

-- @brief 插件消息方法
function bodyOnPluginEvent(msg, param)
    if msg == 101 then
  
    elseif msg == 101 + MSG_CACHEDATA_RELOAD then -- 101请求的数据有更新
    elseif msg == MSG_VOICEINPUT then --语音返回消息 
        local toText = VoiceInput:getInputText()
        local voiceData = Json:loadString2Table(toText)
        if not voiceData.RecognizedText then
            Dialog:show(rootSprite, '语音转换失败!', 'ok')
        else
            local voiceText = Sprite:findChild(rootSprite, 'voiceText')
            Sprite:setProperty(voiceText, 'text', voiceData.RecognizedText)
            if voiceData.RecognizedText ~= '' and voiceData.RecognizedText ~= '' then
                -- 根据语音输入的内容进行判断用户行为
                Log:write('打电话')
                RecognizedUserVoice(voiceData.RecognizedText)
            end
        end
    end
end

function RecognizedUserVoice(voiceText)
    Log:write('开始打电话相关操作')
    local startIndex,endIndex = string.find(voiceText,'打电话')
    local jttxlStartIndex = string.find()
    Log:write('endIndex is ',endIndex)
    if startIndex ~= nil and endIndex ~= nil then
        local mobile = '15156892727'
        Log:write('mobile is ',mobile)
        if Util:openCallDialog('callFinished',mobile, 0) then
            Log:write('拔打电话成功')
        else
           Log:write('拔打电话失败')
        end
    else
        -- 从数据库中搜索联系人信息
        Log:write('从数据库搜索用户信息')
    end 
end

function voiceBtnOnSelect(sprite)
    Log:write("voiceBtnOnSelect")
    Sprite:releaseCapture(sprite)
    Sprite:killFocus(sprite)
    local success = VoiceInput:startVoiceInput('0000', '')
    if success == 0 then
        Dialog:show(rootSprite, '打开录音失败!', 'ok')
    end
end

-- @brief 按键响应处理
function mainNodeOnKeyUp(sprite, kc)
    Log:write('mainNodeOnKeyUp')
    if kc == Key.F2 then -- 按下返回键
        Log:write('backgroundApp')
        Util:backgroundApp()
    end
end

]]>
</root>
