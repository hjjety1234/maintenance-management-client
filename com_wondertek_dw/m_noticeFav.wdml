<?xml version="1.0" encoding="utf-8"?>
<!--
==
============================================================================
== | WonderTek [ 网络无处不在，沟通及时到达 ] ==
============================================================================
== | Copyright (c) 2012, WonderTek, Inc. All Rights Reserved. ==
============================================================================
== | Author: hewu <hewu2008@gmail.com> ==
============================================================================
== | Desc: 页面描述 ==
============================================================================
-->
<root>
    <header />
    <body resolution="480,800" BuildChildrenFinished="bodyBuildChildrenFinished"
        OnSpriteEvent="bodyOnSpriteEvent" OnPluginEvent="bodyOnPluginEvent">
        <node name="mainNode" rect="0,0,480,800" enable="true" active="true"
            OnKeyUp="mainNodeOnKeyUp" layouttype="1" extendstyle="1111">

            <!-- 设置背景 -->
            <shadow rect="0,0,480,800" color="#ffffff" alpha="255"
                extendstyle="1111" />
            <image name="background" rect="0,0,480,800" src="file://image/backgroundImg.png"
                extendstyle="1111" style="autosize" />
            <!-- 公告头部 -->
            <node rect="0,0,480,66" extendstyle="1111">
                <image name="titleBg" rect="0,0,480,66" src="file://image/title_bg_new.png"
                    extendstyle="1111" style="autosize" />

                <!-- 返回按钮 -->
                <button name="backBtn" rect="0,0,66,66" normal="normal" sel="sel"
                    OnSelect="doBack" extendstyle="1111">
                    <image name="normal" rect="15,8,75,75" src="file://image/skin/title_back_new.png"
                        extendstyle="1111" />
                    <image name="sel" rect="15,8,75,75" src="file://image/skin/title_back_new.png"
                        extendstyle="1111" />
                </button>
                <!-- 二级菜单标题 -->
                <scrolltext name="title" rect="105,0,280,46" text="我的收藏" font-family='微软雅黑'
                    extendstyle="1111" font-size="30" h-align="center" v-align="center"
                    color="#ffffff" scroll="true" step="2" />

                <!-- 显示或隐藏搜索条 -->
                <button name="btnShowSearchBar" rect="400,0,75,75"
                    font-size="24" extendstyle="1111" text="" color="#ffffff"
                    OnSelect="OnShowSearchBarButtonClicked">
					<image name="favBtnImage" rect="21,8,75,75" src="file://image/skin/ico_search_new.png"
						 extendstyle="1111" />
					</button>
            </node>

            <!-- 隐藏的搜索栏 -->
            <node name="searchBar" rect="0,66,480,56" extendstyle="1111"
                visible="false">
                <image name="search_bg" rect="0,0,480,56" src="file://image/title_bg.png"
                    style="autosize" extendstyle="1111" />
                <image name="searchBarImage" rect="15,5,452,42"
                    src="file://image/search_input_new.png" style="autosize" extendstyle="1111" />
                <edit name="keywordEdit" rect="37,14,340,22" extendstyle='1111'
                    font-family='微软雅黑' v-align="center" font-size="22" text=""
                    OnTextChanged="editOnTextChanged">
                    <label name="hideLabel" rect="0,0,442,20" text="搜索标题"
                        font-family='微软雅黑' color="#c0c0c0" extendstyle="1111" style="autosize"
                        h-align="left" v-align="center" font-size="20" />
                </edit>
                <button name="searchButton" rect="426,6,40,40" OnSelect="OnSearchButtonClicked"
                    extendstyle="1111">
                    <image name="searchButtonImage" rect="0,0,92,46"
                        src="" style="autosize"
                        extendstyle="1111" />
                </button>
            </node>

            <!-- 公告列表视图  -->
            <node name="listViewNode" rect="0,66,480,654" extendstyle="1111">
                <listview name="listView1" rect="0,0,480,654" extendstyle="1111"
                    border="false" visible="true" auto-scroll="true" />
            </node>

            <!-- 公告列表项  -->
            <node name="listItem1" rect="0,0,480,100" border="false"
                visible="false" enable="false" active="false" extendstyle="1111">
                <button name="btnname" rect="0,0,480,100" normal="normal"
                    focus="focus" OnSelect="itemOnSelect" extendstyle="1111">
				<image name="listButtonImage" rect="0,0,480,100" src=""
					extendstyle="1111" style='autosize' />
                    <!-- 聚焦时的列表项背景图片 -->
                    <node name="focus" rect="0,0,480,100" extendstyle="1111">
                        <image name="focusImage" rect="460,30,14,20" src="file://image/jiantou_new.png"
                            style="autosize" extendstyle="1111" />
                    </node>

                    <!-- 正常情况时列表项背景图片 -->
                    <node name="normal" rect="0,0,480,100" extendstyle="1111"
                        v-align="center" h-align="center">
                        <image name="normalImage" rect="460,30,14,20" src="file://image/jiantou_new.png"
                            style="autosize" extendstyle="1111" />
                    </node>

                    <!-- 通告内容详情 -->
                    <label name="noticeId" rect="0,0,20,65" border="false" text=""
                        h-align="right" v-align="center" color="#303030" font-size="15"
                        extendstyle="1111" visible="false" />
                    <label name="isCollect" rect="0,0,20,65" border="false" text=""
                        h-align="right" v-align="center" color="#303030" font-size="15"
                        extendstyle="1111" visible="false" />
                    <scrolltext name="noticeTitle" rect="10,0,360,60"
                        border="false" h-align="left" v-align="center" color="#303030" font-family='微软雅黑'
                        text="" font-size="24" scroll="true" step="4" extendstyle="1111" />
                    <!-- 发布时间 -->
                   <label name="noticeDate" rect="255,55,110,30" border="false"
                        text="" h-align="center" v-align="center" color="#5a5a5a"
                        font-size="20" extendstyle="1111" font-family='微软雅黑' />
                    <!-- 发布人  -->
                  <node rect="10,55,160,20" extendstyle="1111">
                        <label name="label1" rect="0,0,70,30" border="false" text="发布人:"
                            h-align="left" v-align="center" color="#5a5a5a" font-size="20"
                            extendstyle="1111" font-family='微软雅黑' />
                        <label name="issuePerson" rect="70,0,90,30" border="false"
                            text="" h-align="left" v-align="center" color="#5a5a5a"
                            font-size="20" extendstyle="1111" font-family='微软雅黑' />
                    </node>
                    <!-- 新的公告提示图标 -->
                   <node name="newNoticeImageNode" rect="410,0,43,44"
                        extendstyle="1111" visible="false">
                        <image name="newNoticeImage" rect="0,0,43,44"
                            src="file://image/lable_new.png"  extendstyle="1111" />
                    </node>
                    <!-- 收藏按钮 -->
                    <node name="MyFavNoticeNode" rect="410,0,43,41" extendstyle="1111"
                        visible="false">
                        <image name="newFavImage" rect="0,0,43,41"
                            src="file://image/skin/bookmark_new.png" 
                            extendstyle="1111" v-align="center" />
                    </node>
                </button>
            </node>
        </node>
    </body>
    <![CDATA[

require 'com_wondertek_dw.common.framework'
local rootSprite
local isSearchBarVisible = false
local isFavContextMenuVisible = false
local nSearchBarWidth = 55
local jsonDecodedNotice = nil
local usercode = 'zyhefei'

---------------------------------------callbacks--------------------------------
-- @brief root子节点创建完事件
function bodyBuildChildrenFinished(sprite)
    rootSprite = sprite
    usercode = Config:get('username')
end

-- @brief root节点消息方法
function bodyOnSpriteEvent(msg, param)
    if msg == MSG_ACTIVATE then -- 页面激活
        requestFavNoticeList('NOTICE_LIST', 101, usercode, '', '1', '5')
    elseif msg == MSG_DEACTIVATE then
    end
end

-- @brief 插件消息方法
function bodyOnPluginEvent(msg)
    if msg == 101 then
        -- 删除原有列表项
        local list = Sprite:findChild(rootSprite, 'listView1')
        ListView:removeAllItems(list)
        jsonDecodedNotice = Http:jsonDecode('NOTICE_LIST')
        -- 检查是否有返回结果
        if (jsonDecodedNotice == nil or jsonDecodedNotice["value"] == nil or
            jsonDecodedNotice["value"] == '') then
            Dialog:show("", "没有我的收藏", "ok")
            return
        end
        -- 迭代取得列表的长度
        local len = 0
        for i in pairs(jsonDecodedNotice["value"]) do
            len = len + 1
        end
        if (len == 0) then
            Dialog:show("", "没有我的收藏", "ok")
            return
        end
        -- 加载新的列表项
        ListView:loadItem(list, Sprite:findChild(rootSprite, 'listItem1'), len, 'loadListItem')
        ListView:adjust(list)
        -- 刷新图标
        refresh(rootSprite)
    elseif msg == 101 + MSG_CACHEDATA_RELOAD then -- 101请求的数据有更新
    elseif msg == MSG_NETWORK_ERROR then -- 拨号失败
        Log:write('拨号失败')
    elseif msg > MSG_NETWORK_ERROR then -- 请求超时
        Log:write('请求超时')
    end
end

-- @brief 按键响应处理
function mainNodeOnKeyUp(sprite, kc)
    if kc == Key.F2 then -- 按下返回键
        Scene:back()
        return 1
    end
end

---------------------------------------util functions---------------------------
function loadListItem(list, item, index)
    Sprite:setRect(item, 0, 0, 480, 100)
    Sprite:setProperty(item, 'extendstyle', '1111')
    -- 获取要创建的列表项Sprite
    local noticeIdSprite = Sprite:findChild(item, 'noticeId')
    local isCollectSprite = Sprite:findChild(item, 'isCollect')
    local noticeTitleSprite = Sprite:findChild(item, 'noticeTitle')
    local noticeDateSprite = Sprite:findChild(item, 'noticeDate')
    local issuePersonSprite = Sprite:findChild(item, 'issuePerson')
    -- 设置列表项的内容
    local listItemBg = Sprite:findChild(item, 'listButtonImage')
    Sprite:setRect(listItemBg, 0, 0, 480, 100)
    local num = index+1
    Log:write('index=============================',num%2)
    if num % 2 > 0 then
            Sprite:setProperty(listItemBg, 'src', 'file://image/item_bg.png')
    end
    if (jsonDecodedNotice ~= nil and jsonDecodedNotice['value'] ~= nil) then
        local value = jsonDecodedNotice['value'][index]
        if value ~= nil then
            Sprite:setProperty(noticeIdSprite, 'text', value["id"])
            if value.iscollect == nil then
                Sprite:setProperty(isCollectSprite, 'text', '1')
            else
                Sprite:setProperty(isCollectSprite, 'text', value["iscollect"])
            end
            Sprite:setProperty(noticeTitleSprite, 'text', value["title"])
            Sprite:setProperty(noticeDateSprite, 'text', string.sub(value["issuedate"], 1, 10))
            Sprite:setProperty(issuePersonSprite, 'text', value["issueperson"])
        end
    end
end

-- @brief 返回按钮处理
function doBack()
    Scene:back()
end

--@brief 请求服务器公告收藏列表
function requestFavNoticeList(tag, num, usercode, title, page, pagesize)
    local server = Config:get("server")
    local requestURL = string.format('&cmd=wlbnewslist&collectflag=1&title=%s&page=%s', title, page)
    Log:write("请求收藏地址:", requestURL)
    local reqURL = getWholeUrl('nbspweb/webservice/notice!doWebservice.action', requestURL)
    Http:request(tag, reqURL, num, {useCache=false})
end

-- @brief 列表项选择处理
function itemOnSelect(sprite)
    -- 获取所选列表项数据
    local noticeId = Sprite:findChild(sprite, 'noticeId')
    local isCollect = Sprite:findChild(sprite, 'isCollect')
    local noticeTitle = Sprite:findChild(sprite, 'noticeTitle')
    local noticeDate = Sprite:findChild(sprite, 'noticeDate')
    local issuePerson = Sprite:findChild(sprite, 'issuePerson')
    -- 将数据库中该条记录标记为已读
    setNewFlagToZero(noticeId)
    -- 设置要发送到公告详情的数据
    local noticeDetailHandler = Reg:create("noticeDetail")
    Reg:setString(noticeDetailHandler, 'usercode', usercode)
    Reg:setString(noticeDetailHandler, 'noticeId', Sprite:getText(noticeId))
    Reg:setString(noticeDetailHandler, 'iscollect', Sprite:getText(isCollect))
    Reg:setString(noticeDetailHandler, 'noticeTitle', Sprite:getText(noticeTitle))
    Reg:setString(noticeDetailHandler, 'noticeDate', Sprite:getText(noticeDate))
    Reg:setString(noticeDetailHandler, 'issuePerson', Sprite:getText(issuePerson))
    -- 进行页面跳转
    Scene:setReturn(Alias.m_noticeFav, Alias.m_noticeDetail)
    Scene:go(Alias.m_noticeDetail, true)
end

-- @brief 显示或者隐藏搜索条
function OnShowSearchBarButtonClicked(sprite)
    local headerNodeSprite = Sprite:getParent(sprite)
    local mainNodeSprite = Sprite:getParent(headerNodeSprite)
    local listViewSprite = Sprite:findChild(mainNodeSprite, "listView1")
    local searchBarSprite = Sprite:findChild(mainNodeSprite, "searchBar")
    local x, y, width, height = Sprite:getRect(listViewSprite)
    if (isSearchBarVisible == false) then
        Sprite:setRect(listViewSprite, x, y + nSearchBarWidth, width, height)
        Sprite:setVisible(searchBarSprite, 1)
        isSearchBarVisible = true
    else
        Sprite:setRect(listViewSprite, x, y - nSearchBarWidth, width, height)
        Sprite:setVisible(searchBarSprite, 0)
        isSearchBarVisible = false
        requestFavNoticeList('NOTICE_LIST', 101, usercode, '', '1', '5')
    end
end

--@brief 点击搜索按钮消息处理函数
function OnSearchButtonClicked(sprite)
    -- 获取用户输入
    local keywordEditSprite = Sprite:findChild(rootSprite, "keywordEdit")
    local title = Sprite:getText(keywordEditSprite)
    -- 请求搜索
    requestFavNoticeList('NOTICE_LIST', 101, usercode, title, '1', '5')
end

-- @brief 刷新页面收藏和新公告图标
function refresh(rootSprite)
    Log:write('刷新界面的收藏和新公告按钮')
    Log:write('返回的json数据:',jsonDecodedNotice["value"])
    if jsonDecodedNotice["value"] == nil or jsonDecodedNotice["value"] == '' then
        Log:write('Json数据不存在，不能刷新界面图标!')
        return
    end
    local jsonValue = jsonDecodedNotice["value"]
    local listViewSprite = Sprite:findChild(rootSprite, 'listView1')
    local listItemCount = ListView:getItemCount(listViewSprite)
    Log:write("目前列表项数目："..listItemCount)
    local i = 0
    while (i < listItemCount) do
        local listItemSprite = ListView:getItem(listViewSprite, i)
        local noticeIdSprite = Sprite:findChild(listItemSprite, 'noticeId')
        local newNoticeImageNodeSprite = Sprite:findChild(listItemSprite, 'newNoticeImageNode')
        local myFavNoticeNodeSprite = Sprite:findChild(listItemSprite, 'MyFavNoticeNode')
        -- 0 为已收藏
        if (jsonValue[i].iscollect ~= nil and jsonValue[i]["iscollect"] == '0') then
            Sprite:setVisible(myFavNoticeNodeSprite, 1)
        else
            Sprite:setVisible(myFavNoticeNodeSprite, 0)
        end
        -- 1 为未读
        if (jsonValue[i]["newflag"] == '1') then
            Sprite:setVisible(newNoticeImageNodeSprite, 1)
        else
            Sprite:setVisible(newNoticeImageNodeSprite, 0)
        end
        i = i + 1
    end
end

-- @brief将数据库中该条记录标记为已读
function setNewFlagToZero(noticeId)
    local server = Config:get("server")
    local requestURL = string.format('nbspweb/webservice/notice!doWebservice.action?cmd=wlbupdatenews&usercode=%s&id=%s',server,
    usercode)
    Log:write("标记:"..noticeId.."为已阅读:"..requestURL)
    Http:request('NOTICE_NEW_FLAG', requestURL, MSG_NOTICE_NEW_FLAG)
end

    ]]>
</root>
