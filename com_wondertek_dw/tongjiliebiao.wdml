<?xml version="1.0" encoding="utf-8"?>
	<!--
		==
		============================================================================
		== | WonderTek [ 网络无处不在，沟通及时到达 ] ==
		============================================================================
		== | Copyright (c) 2012, WonderTek, Inc. All Rights Reserved. ==
		============================================================================
		== | Author: hewu <hewu2008@gmail.com> ==
		============================================================================
		== | Desc: 页面描述 ==
		============================================================================
	-->
<root>
	<header />
	<body resolution="480,800" BuildChildrenFinished="bodyBuildChildrenFinished"
		OnSpriteEvent="bodyOnSpriteEvent" OnPluginEvent="bodyOnPluginEvent">

		<!-- 设置背景 -->
		<shadow rect="0,0,480,800" color="#e8e9ed" alpha="255"
			extendstyle="1111" />

		<!-- 设置头部 -->
		<node name="baseSprite" rect="0,0,480,66" extendstyle="1111">
			<image name="title" rect="0,0,480,66" border="false"
				src="file://image/title_bg.png" style="autosize" extendstyle="1111">
				<label rect="0,0,480,66" text="统计列表" color="#ffffff" v-align="center"
					h-align="center" font-size="28" extendstyle="1111" />
			</image>
			<button name="backBtn" rect="0,10,75,45" normal="normal" sel="sel"
				OnSelect="doBack" extendstyle="1111">
				<image name="normal" rect="0,0,75,45" src="file://image/title_back_n.png"
					style="autosize" extendstyle="1111">
				</image>
				<image name="sel" rect="0,0,75,45" src="file://image/title_back_s.png"
					style="autosize" extendstyle="1111">
				</image>
				<label rect="15,0,60,45" text="首页" color="#ffffff"
					extendstyle="1111" style="autosize" h-align="center" v-align="center"
					font-size="24"></label>
			</button>
		</node>

		<!-- 筛选节点  -->
		<node name="filterNode" rect="0, 66, 480, 66" enable="true"
			active="true" extendstyle="1111">
			<!-- 选择城市 -->
			<node name="cityFilterNode" rect="0,0,200,66" enable="true"
				extendstyle="1111">
				<label name="label2" rect="5,5,60,50" border="false" text="城市："
					h-align="center" v-align="center" color="#000000" font-family="微软雅黑"
					font-size="24"></label>
				<image rect="65,5,135,50" src="file://image/combobox1.png"
					style="autosize" extendstyle="1111">
				</image>
				<!-- 筛选城市  -->
				<label name="selectCityLabel" rect="65,5,105,45" border="false"
					text="所有" h-align="center" v-align="center" color="#000000"
					font-family="微软雅黑" font-size="24"></label>
				<!-- 筛选按钮 -->
				<button name="selectCityButton" rect="170,5,30,50" border="false"
					text="" color="#ffffff" OnSelect="OnSelectCityButtonClicked"></button>
			</node>

			<!-- 选择月份 -->
			<node name="monthFilterNode" rect="200,0,200,66" enable="true"
				extendstyle="1111">
				<!-- 月份标签和背景图 -->
				<label name="label2" rect="5,5,60,50" border="false" text="月份："
					v-align="center" color="#000000" font-family="微软雅黑" font-size="24"></label>
				<image rect="65,5,135,50" src="file://image/combobox1.png"
					style="autosize" extendstyle="1111">
				</image>
				<!-- 筛选月份，默认为当前月份 -->
				<label name="selectMonthEdit" rect="65,5,105,45" border="false"
					font-family="微软雅黑" h-align="center" v-align="center" font-size="24"></label>
				<!-- 筛选月份按钮 -->
				<button name="selectMonthButton" rect="170,5,30,50" border="false"
					text="" color="#ffffff" OnSelect="OnSelectMonthButtonClicked"></button>
			</node>

			<!-- 确定筛选按钮 -->
			<node name="OkFilterNode" rect="400,0,80,66" enable="true"
				extendstyle="1111">
				<button name="okSelectButton" rect="5,5,68,50" border="false"
					text="" color="#ffffff" OnSelect="okSelectButtonClicked"
					extendstyle="1111">
					<image rect="0,0,68,50" sudoku="15,15,15,15" src="file://image/btn_bg_n.png"
						style="sudoku-auto" extendstyle="1111">
						<label rect="0,5,68,30" border="false" text="确定"
							font-family="微软雅黑" h-align="center" v-align="center" font-size="24"
							extendstyle="1111"></label>
					</image>
				</button>
			</node>
		</node>

		<!-- 主体节点 -->
		<node name="mainNode" rect="0,132,480,668" visible="true" enable="true"
			active="true" OnKeyUp="mainNodeOnKeyUp" layouttype="1" extendstyle="1111">
			<!-- 统计列表 -->
			<node name="listNode" rect="0,0,480,668" extendstyle="1111">
				<listview name="sampleList" rect="0,0,480,734" extendstyle="1111" />
			</node>
			<!-- 统计列表项模板  -->
			<node name="listitem" visible="false" enable="false" active="false"
				extendstyle="1111" rect="0,0,480,80">
				<label name='label1' rect="30,10,313,30" text="" color="#000000"
					extendstyle="1111" h-align="left" v-align="center" font-size="28"
					font-style="" font-family="微软雅黑"></label>
				<shadow name="histogramImage" rect="30,40,400,30" auto-size="true"
					style="center" color="#95caca" alpha="128"></shadow>
			</node>
		</node>

		<!-- 城市选择节点-->
		<node name="citySelectNode" rect="0,0,480,800" visible="false"
			enable="false" active="true" OnKeyUp="mainNodeOnKeyUp" layouttype="1"
			extendstyle="1111">
			<!-- 城市列表 -->
			<node name="cityListViewNode" rect="120,200,240,450"
				extendstyle="1111">
				<image rect="0,0,240,450" src="file://image/input.png" style="sudoku-auto"
					extendstyle="1111" sudoku="15,15,15,15">
				</image>
				<listview name="cityListView" rect="0,20,240,450"
					extendstyle="1111" border="false">
					<list-item rect="0,0,240,80" extendstyle="1111" border="false">
						<button rect="20,10,200,60" OnSelect="OnCityListItemSelect"
							normal="normal" extendstyle="1111" color="#2d547b">
							<node name="normal">
								<image rect="0,0,200,60" sudoku="15,15,15,15"
									src="file://image/btn_bg_n.png" style="sudoku-auto"
									extendstyle="1111" />
							</node>
						</button>
						<!-- 显示的标签将上面的按钮完全覆盖 -->
						<label name="cityNameLabel" rect="20,10,200,60" text="$(cityName)"
							color="#000000" v-align="center" h-align="center" font-size="24"
							extendstyle="1111" />
					</list-item>
					<dataset>
						<set cityName="所有" />
						<set cityName="合肥市" />
						<set cityName="芜湖市" />
						<set cityName="六安市" />
						<set cityName="黄山市" />
					</dataset>
				</listview>
			</node>
		</node>

		<!-- 月份选择节点-->
		<node name="monthSelectNode" rect="0,0,480,800" visible="false"
			enable="false" active="true" OnKeyUp="mainNodeOnKeyUp" layouttype="1"
			extendstyle="1111">
			<!-- 月份列表 -->
			<node name="monthListViewNode" rect="120,143,240,600"
				extendstyle="1111">
				<image rect="0,0,240,600" src="file://image/input.png" style="sudoku-auto"
					extendstyle="1111" sudoku="15,15,15,15">
				</image>
				<listview name="monthListView" rect="0,20,240,560"
					extendstyle="1111" border="false">
					<list-item rect="0,0,240,80" extendstyle="1111" border="false">
						<button rect="20,10,200,60" OnSelect="OnMonthListItemSelect"
							normal="normal" extendstyle="1111" color="#2d547b">
							<node name="normal">
								<image rect="0,0,200,60" sudoku="15,15,15,15"
									src="file://image/btn_bg_n.png" style="sudoku-auto"
									extendstyle="1111" />
							</node>
						</button>
						<!-- 显示的标签将上面的按钮完全覆盖 -->
						<label name="monthNameLabel" rect="20,10,200,60" text="$(monthName)"
							color="#000000" v-align="center" h-align="center" font-size="24"
							extendstyle="1111" />
					</list-item>
					<dataset>
						<set monthName="一月" />
						<set monthName="二月" />
						<set monthName="三月" />
						<set monthName="四月" />
						<set monthName="五月" />
						<set monthName="六月" />
						<set monthName="七月" />
						<set monthName="八月" />
						<set monthName="九月" />
						<set monthName="十月" />
						<set monthName="十一月" />
						<set monthName="十二月" />
					</dataset>
				</listview>
			</node>
		</node>
	</body>
    <![CDATA[

    require 'com_wondertek_dw.common.framework'
    require 'os'
    local rootSprite
    local values
    local searchMonthIndex = 1
    local month = {'一月','二月', '三月', '四月', '五月', '六月', '七月',
    '八月', '九月', '十月', '十一月', '十二月'}
    ---------------------------------------callbacks--------------------------------
    -- @brief root子节点创建完事件
    function bodyBuildChildrenFinished(sprite)
        rootSprite = sprite
        -- 设置当前月份
        local now = os.date("*t")
        local curMonth = now['month']
        local selectMonthEditSprite = Sprite:findChild(rootSprite, "selectMonthEdit")
        Sprite:setProperty(selectMonthEditSprite, "text", month[curMonth])
        --构造请求地址
        local currentMonthString = string.format('%s-%s-%s', now['year'], now['month'], '1')
        local nextMonth, year
        if (now['month'] >= 12) then
            nextMonth = 1
            year = now['year'] + 1
            else
            nextMonth = now['month'] + 1
            year = now['year']
        end
        local nextMonthString = string.format('%s-%s-%s', year,
        nextMonth, '1') -- 下月
        local server = Config:get('server')
        local requestURL = string.format('%s/nbspweb/webservice/patrolstatistic!doWebservice.action?cmd=wlbtongjilist&area=&usercode=%s&page=%s&pagesize=%s&startmonth=%s&endmonth=%s',
        server,'adminhf', '1', '5', currentMonthString, nextMonthString)
        -- 进行http请求
        searchMonthIndex = curMonth
        Http:connectCMWAP()
        Http:request("StatList", requestURL, 101)
    end
    -- @brief root节点消息方法
    function bodyOnSpriteEvent(msg, param)
        if msg == MSG_ACTIVATE then -- 页面激活
            elseif msg == MSG_DEACTIVATE then
        end
    end
    -- @brief 插件消息方法
    function bodyOnPluginEvent(msg)
        if msg == 101 then
            -- 请求获得相应
            local jsonResp = Http:jsonDecode("StatList")
            values = jsonResp["value"]
            -- 取得列表长度
            if (values == '') then
                Dialog:show("统计列表", "返回数据为空", "ok")
                return
            end
            local len = 0
            for i,v in pairs(values) do
                len = len + 1
            end
            Log:write('22222222222222',len)
            local list = Sprite:findChild(rootSprite, 'sampleList')
            ListView:removeAllItems(list)
            ListView:loadItem(list, Sprite:findChild(rootSprite, 'listitem'), len, 'loadListItem')
            ListView:adjust(list)
            elseif msg == 101 + MSG_CACHEDATA_RELOAD then -- 101请求的数据有更新
            elseif msg == MSG_NETWORK_ERROR then -- 拨号失败
            Log:write('拨号失败')
            elseif msg > MSG_NETWORK_ERROR then -- 请求超时
            Log:write('请求超时')
        end
    end
    -- @brief 按键响应处理
    function mainNodeOnKeyUp(sprite, kc)
        if kc == Key.F2 then -- 按下返回键
            Scene:back()
            return 1
        end
    end
    ---------------------------------------util functions---------------------------
    --@brief 加载城市巡检列表项
    function loadListItem(list, item, index)
        Sprite:setRect(item, 0, 0, 480, 80)
        Sprite:setProperty(item, 'extendstyle', '1111')
        -- 取得列表项的sprite
        local itemLabel = Sprite:findChild(item, 'label1')
        local histogramImageSprite = Sprite:findChild(item, 'histogramImage')
        -- 解析返回的结果
        if (values[index] == nil) then
            return
        end
        local regionname = values[index]['regionname']
        local rate = string.gsub(values[index]['rate'], '[%% ]', '')
        -- 设置列表项的标签
        local text = string.format('%s %s 巡检率 :%s%%', regionname, month[searchMonthIndex], rate)
        Sprite:setProperty(itemLabel, "text", text)
        -- 设置列表项直方图长度
        local rateValue = tonumber(rate)
        Log:write('3333333333333333', rateValue)
        x,y,width,height = Sprite:getRect(histogramImageSprite)
        Sprite:setRect(histogramImageSprite, x, y, width * rateValue / 100, height)
    end
    --@brief 返回按钮消息处理函数
    function doBack(sprite)
        Scene:back()
    end
    --@brief 点击选择城市按钮消息处理函数
    function OnSelectCityButtonClicked(sprite)
        local citySelectNodeSprite = Sprite:findChild(rootSprite, "citySelectNode")
        Sprite:setProperty(citySelectNodeSprite, "visible", "true")
        Sprite:setProperty(citySelectNodeSprite, "enable", "true")
    end
    --@brief 城市选择列表项消息处理函数
    function OnCityListItemSelect(sprite)
        -- 按钮的父节点才是列表项
        local cityListItemSprite = Sprite:getParent(sprite)
        local cityNameLabelSprite = Sprite:findChild(cityListItemSprite, "cityNameLabel")
        local cityNameLabelText = Sprite:getText(cityNameLabelSprite)
        -- 设置新的城市名称
        local selectCityLabelSprite = Sprite:findChild(rootSprite, "selectCityLabel")
        Sprite:setProperty(selectCityLabelSprite, "text", cityNameLabelText)
        -- 隐藏城市选择列表
        local citySelectNodeSprite = Sprite:findChild(rootSprite, "citySelectNode")
        Sprite:setProperty(citySelectNodeSprite, "visible", "false")
        Sprite:setProperty(citySelectNodeSprite, "enable", "false")
    end
    --@brief 用户月份选择消息处理函数
    function OnMonthListItemSelect(sprite)
        -- 显示选择的月份
        local selectMonthEditSprite = Sprite:findChild(rootSprite, "selectMonthEdit")
        local listItemSprite = Sprite:getParent(sprite)
        local monthNameLabelSprite = Sprite:findChild(listItemSprite, 'monthNameLabel')
        local monthNameLabelText = Sprite:getText(monthNameLabelSprite)
        Sprite:setProperty(selectMonthEditSprite, "text", monthNameLabelText)
        -- 隐藏月份选择
        local monthSelectNodeSprite = Sprite:findChild(rootSprite, "monthSelectNode")
        Sprite:setProperty(monthSelectNodeSprite, "visible", "false")
        Sprite:setProperty(monthSelectNodeSprite, "enable", "false")
    end
    --@brief 递增月份消息处理函数
    function OnIncMonthButtonClicked(sprite)
        local selectMonthEditSprite = Sprite:findChild(rootSprite, "selectMonthEdit")
        local currentSelectMonthText = Sprite:getText(selectMonthEditSprite)
        local j = 1
        for i, value in ipairs(month) do
            if (value == currentSelectMonthText) then
                j = i
                break
            end
        end
        -- 边界处理
        if j == table.getn(month) then
            j = 1
            else
            j = j + 1
        end
        Sprite:setProperty(selectMonthEditSprite, "text", month[j])
    end
    --@brief 递减月份处理函数
    function OnDecMonthButtonClicked(sprite)
        local selectMonthEditSprite = Sprite:findChild(rootSprite, "selectMonthEdit")
        local currentSelectMonthText = Sprite:getText(selectMonthEditSprite)
        local j = 1
        for i, value in ipairs(month) do
            if (value == currentSelectMonthText) then
                j = i
                break
            end
        end
        -- 边界处理
        if j == 1 then
            j = table.getn(month)
            else
            j = j - 1
        end
        Sprite:setProperty(selectMonthEditSprite, "text", month[j])
    end
    --@brief 确认筛选按钮消息处理函数
    function okSelectButtonClicked(sprite)
        -- 对用户输入进行检查
        local selectCityLabelSprite = Sprite:findChild(rootSprite, "selectCityLabel")
        local selectMonthEditSprite = Sprite:findChild(rootSprite, "selectMonthEdit")
        local selectCityLabelText = Sprite:getText(selectCityLabelSprite)
        local selectMonthEditText = Sprite:getText(selectMonthEditSprite)
        if (selectCityLabelText == nil or selectCityLabelText == '' or selectMonthEditText == nil or
            selectMonthEditText == '') then
            Dialog:show("","用户输入不合法", "ok")
            return
        end
        -- 构造http请求地址
        -- 获取用户输入的月份
        local now = os.date("*t")
        local j = 1
        for i,value in ipairs(month) do
            if (value == selectMonthEditText) then
                j = i
                break
            end
        end
        local currentMonthString = string.format('%s-%s-%s', now['year'], j, '1')
        -- 构造输入月份的下月字符串
        local nextMonth, year
        if (j >= 12) then
            nextMonth = 1
            year = tostring(tonumber(now['year']) + 1)
            else
            nextMonth = tonumber(j) + 1
            year = now['year']
        end
        local nextMonthString = string.format('%s-%s-%s', year,
        nextMonth, '1') -- 下月
        -- 读取配置的服务器字段
        local server = Config:get('server')
        -- 对用户输入的城市进行处理
        if (selectCityLabelText == '所有') then
            selectCityLabelText = ''
        end
        local requestURL = string.format('%s/nbspweb/webservice/patrolstatistic!doWebservice.action?cmd=wlbtongjilist&area=%s&usercode=%s&page=%s&pagesize=%s&startmonth=%s&endmonth=%s',
        server,selectCityLabelText,'adminhf', '1', '5', currentMonthString, nextMonthString)
        -- 进行http请求
        searchMonthIndex = j
        Http:connectCMWAP()
        Http:request("StatList", requestURL, 101)
    end
    --@brief 选择月份按钮消息处理函数
    function OnSelectMonthButtonClicked(sprite)
        local monthSelectNodeSprite = Sprite:findChild(rootSprite, "monthSelectNode")
        Sprite:setProperty(monthSelectNodeSprite, "visible", "true")
        Sprite:setProperty(monthSelectNodeSprite, "enable", "true")
    end
]]>
</root>
