<?xml version="1.0" encoding="utf-8"?>
<!--
==
============================================================================
== | WonderTek [ 网络无处不在，沟通及时到达 ] ==
============================================================================
== | Copyright (c) 2012, WonderTek, Inc. All Rights Reserved. ==
============================================================================
== | Author: xxxx <xxxx@xxxx.com> ==
============================================================================
== | Desc: 页面描述 ==
============================================================================
-->
<root>
    <header />
    <body resolution="480,800" BuildChildrenFinished="bodyBuildChildrenFinished" 
        OnSpriteEvent="bodyOnSpriteEvent" OnPluginEvent="bodyOnPluginEvent">
        
        <!-- 背景图片  -->
        <image name="image1" rect="0,0,480,80" src="file://image/jttxl/top.png" 
            style="autosize" extendstyle="1111" >
            <label name="titleLabel" rect="0,0,480,80" text="注册" v-align="center" h-align="center" font-family='微软雅黑' font-size='36' 
             color='#ffffff'/>
        </image>
        <image name="image1" rect="0,80,480,720" src="file://image/jttxl/bj.png" 
            style="autosize" extendstyle="1111" />
        
        <!-- 主界面  -->
        <node name="mainNode" rect="0,0,480,800" enable="true" visible='true'
             active="true" OnKeyUp="mainNodeOnKeyUp" layouttype="1" extendstyle="1111">
            <!-- 输入框  -->
            <node name="main1Node" rect="0,150,480,200" extendstyle="1111">
                <!-- 用户名  -->                
                <node rect="0,0,480,67" extendstyle="1111">
                    <image rect="40,0,390,67" border="false" src="file://image/book/input.png"
                        style="sudoku-auto"  sudoku="15,15,15,15"   extendstyle="1111"></image>
                    <image rect="55,15,35,39" border="false" src="file://image/book/name.png"
                        style="autosize" extendstyle="1111"></image>     
                    <edit name="usernameEdit" text='请输入您的手机长号' OnSetFocus="initEditText" OnLostFocus="lostEditText"  rect="110,10,280,45" 
                         v-align="center" font-size="28" color='#7a7a7a' extendstyle='1111'>          
                    </edit>
                </node>    
                        
                <!-- 注册按钮  -->
                <node name="regiterNode" rect="0,120,480,73" extendstyle="1111" visible="true" active="true" enable="true">
                    <button name="zhuceBtn" rect="40,0,389,70" text="获取密码" color="#ffffff"
                        extendstyle="1111" OnSelect="zhuceBtnOnSelect"  visible="true"
                        normal="src:file://image/jttxl/zhuce_d.png;style:autosize"
                        sel="src:file://image/jttxl/zhuce_s.png;style:autosize"
                        font-size="24" />
                </node> 
                <!-- 密码  -->                
                <node name="mimaNode" rect="0,120,480,67" extendstyle="1111" visible="true" active="true" enable="true">
                    <image rect="40,0,390,67" border="false" src="file://image/book/input.png"
                         style="sudoku-auto"  sudoku="15,15,15,15" extendstyle="1111"></image>
                    <image rect="55,20,43,30" border="false" src="file://image/book/key.png"
                        style="autosize" extendstyle="1111"></image>
                    <edit name="passwordEdit" text='请输入密码' OnSetFocus="initEditText" OnLostFocus="lostEditText" password="false" 
                         rect="110,10,280,45" extendstyle="1111" color='#7a7a7a' v-center="true" font-size="26" >
                    </edit>
                </node>
  
                <!-- 记住密码  -->
                <node  name="remembermimaNode" rect="0,200,240,50" extendstyle="1111" visible="false" active="false" enable="false">
                    <button name="rememberBtn" rect="40,30,50,50" border="false" text="" 
                        color="#ffffff" OnSelect="rememberBtnOnselected" extendstyle="1111" data="1">
	                    <image name="rememberFlag" rect="0,0,50,50" border="false" 
	                        src="file://image/book/login_checkbox_unselect.png" style="center"
	                        sudoku="15,15,15,15" extendstyle="1111">
	                    </image>
                    </button>
                    <label rect="95,30,240,40" color="#afafaf" text="记住用户" font-family='微软雅黑'
                        v-align="center" h-align="left" font-size="28" extendstyle="1111" />
                </node>
                
                <!-- 找回密码  -->
                <node  name="findmimaNode" rect="240,240,240,50" extendstyle="1111" visible="false" active="false" enable="false">
                    <button name="rememberBtn" rect="0,0,180,50" border="false" text="忘记密码"  font-size="28" OnSelect="zhuceBtnOnSelect"
                        color="#0193f0"  extendstyle="1111" data="0">
                    </button>
                </node>
                
            </node>    
            <!-- 登录按钮  -->
            <node name="loginNode" rect="0,470,480,73" extendstyle="1111" visible="true" active="true" enable="true">
                <button name="btnLogin" rect="40,0,390,73" text="" color="#ffffff"
                    extendstyle="1111" OnSelect="btnloginOnSelect"
                    normal="src:file://image/book/login_button.png;style:maxsize;sudoku:15,15,15,15;color:#ffffff"
                    sel="src:file://image/book/login_button_on.png;style:maxsize;sudoku:15,15,15,15;color:#ffffff"
                    font-size="24" />
            </node>
            
            <!-- 文本通知信息  -->
            <label name="noticeLabel" rect="0,655,480,60" font-size="20"  color='#7a7a7a' 
                text="" v-align="center" h-align="center" 
                extendstyle="1111" />
        </node>
        
    </body>
    <![CDATA[

require 'com_wondertek_tx.common.framework'
require 'framework.umsagent'
require 'framework.sqlite'
require 'framework.download'

local rootSprite
local url_login = Alias.url_server..'mobile/login/check?'
local url_downdeptlist = Alias.url_server..'mobile/orger/downall?cmd=downall'
local url_updatedept = Alias.url_server..'mobile/orger/update?cmd=updatedept'
local url_userversion = Alias.url_server..'mobile/UserInfo/getUserInfo?'
local url_register = Alias.url_server..'mobile/login/register?'
local url_downcompanylist = Alias.url_server..'mobile/group/mygroups?cmd=mygroups'
local url_downloadSingleCompany = Alias.url_server..'mobile/group/getgroupusers?cmd=getgroupusers'
local url_downskin = Alias.url_server..'resources/skin/'



local departmentdata1   --组织结构数据
local databaseName
local returnValue
local totalNum
local rights

local bRet, errMsg, retCountTable
local g_exitFlag = false
local noticeLabel   --状态提示label
local loginData
local department_version=0
local employee_version=0
local right_config=''
local timeNum = 50 --获取验证码倒计时秒数
local groupData,downLoadgroupID,org_f=false
local g_ECCode = ''    -- 企业EC编码
local g_skinFlag = ''     -- 标记皮肤是否需要更新
local g_skinPath = ''     --皮肤的本地地址
local g_localPatchPath = nil        -- 皮肤文件临时解压路径
local g_localpath = nil             -- 皮肤文件本地路径

---------------------------------------callbacks--------------------------------
-- @brief root子节点创建完事件
function bodyBuildChildrenFinished(sprite)
    rootSprite = sprite
    Log:write('com_wondertek_tx.login.start')
    noticeLabel = Sprite:findChild(rootSprite, 'noticeLabel')
    
    local mimaNode =  Sprite:findChild(rootSprite, 'mimaNode')
    local findmimaNode =  Sprite:findChild(rootSprite, 'findmimaNode')
    local loginNode =  Sprite:findChild(rootSprite, 'loginNode')
    local noticeLabel =  Sprite:findChild(rootSprite, 'noticeLabel')
    Sprite:setRect(mimaNode, 0,240,480,73)
    Sprite:setRect(findmimaNode, 240,340,240,50)  
    Sprite:setRect(loginNode, 0,540,480,73)
    Sprite:setRect(noticeLabel, 0,660,480,60)
    initdatabase()  --初始化数据库
end

-- @brief root节点消息方法
function bodyOnSpriteEvent(msg, param)
    if msg == MSG_ACTIVATE then
        Http:startNetwork()
        UmsAgent:OnActivate(string.match(Alias.m_login, 'MODULE:\\(.*)'), "登录页")
        Sprite:setProperty(noticeLabel, 'text', '')
    elseif msg == MSG_DEACTIVATE then
        UmsAgent:OnDeactivate()
    elseif msg == MSG_STRINGEVENT then   ----获取密码自动添加
        local param1 = Param:getInteger(param, 0)
        local param2 = Param:getString(param, 1)

        Log:write('MSG_STRINGEVENT===param1 ================ ', param1)
        Log:write('MSG_STRINGEVENT===param2 ================ ', param2) 
        local password = string.match(param2, ".+|(.+)")

        Sprite:setProperty(Sprite:findChild(rootSprite, 'passwordEdit'), 'text', password)
    elseif msg == MSG_NETWORK then 
        if g_exitFlag ==  true then
            doExit()
        end
    end
end

-- @brief 插件消息方法
function bodyOnPluginEvent(msg)
    if msg == 101 then --登录方法 
        UmsAgent:onLoadFinish()
        --if Loading:isShow() then Loading:close() end
        loginData = Http:jsonDecode('login_istrue')
        Log:write('+++++++++==loginData=====', loginData)
        if loginData['code'] == '0' then
            Sprite:setProperty(noticeLabel, 'text', '登录成功')
            local phone = loginData['mobile']
            updateDeviceInfoToDb(phone) --在本机进行三码绑定
            --记住用户名和密码
            writeuserInfo()
            local skinvalue = loginData["skins"][0] 
            g_ECCode = skinvalue.skin
            Log:write("需要下载的皮肤为:"..g_ECCode)
            --判断是否需要下载皮肤
            --checkEcSkinFlag()
            --开始下载群组信息
            local paras = '&usercode='..Config:get('username')..'&token='
            Http:request('companydata0', url_downcompanylist..paras, 119, {useCache = false})
            Sprite:setProperty(noticeLabel, 'text', '下载群组中。。。')
        else
            if Loading:isShow() then Loading:close() end
            Sprite:setProperty(noticeLabel, 'text', '')
            Dialog:show('登陆提示', '账户或密码输入错误！', 'ok')            
            return
        end
    elseif msg == 102 then -- 组织结构第一次下载
        --if Loading:isShow() then Loading:close() end
        local departmentdata1 = Http:jsonDecode('departmentdata0')
        local total = departmentdata1.total   
        Log:write('===total====='..total)  
        if total > 0 then
            bRet, errMsg = Sqlite:update(databaseName, "BEGIN;")
            Log:write("部门1添加事务开始:bRet = "..bRet.." errMsg ="..errMsg)
	        for i=0,total-1 do
	            local Valuedata = departmentdata1["value"][i]
	            local department_id = Valuedata.department_id
	            local department_name = Valuedata.department_name
	            local parent_department_id = Valuedata.parent_department_id
	            local department_level = Valuedata.department_level
	            local department_firstword = Valuedata.department_firstword
                local company_id = Valuedata.company_id	             
	            local sql = "insert into tb_c_department(department_id,department_name,parent_department_id,department_level,department_firstword,mark1,mark2,mark3,mark4,company_id) values ('"..department_id.."','"..department_name.."','"..parent_department_id.."','"..department_level.."','"..department_firstword.."' ,'' ,'' ,'' ,'','"..company_id.."' );"
	          --  Log:write('下载部门信息插入语句==第i=='..i..'次==sql=='..sql)
	            bRet, errMsg = Sqlite:update(databaseName, sql)
	        end
            bRet, errMsg = Sqlite:update(databaseName, "COMMIT;") 
            Log:write("部门1添加事务结束:bRet = "..bRet.." errMsg ="..errMsg)
        end
        Log:write('===departmentdata1.deptversion====='..departmentdata1.deptversion)
        department_version = departmentdata1.deptversion
        Config:set('deptversion', departmentdata1.deptversion)
        Log:write('deptversion====='..Config:get('deptversion'))
        --set dept version to db
        local sql = "update tb_c_system set department_version = '"..departmentdata1.deptversion.."';"
        bRet, errMsg = Sqlite:update(databaseName, sql)
        
        Sprite:setProperty(noticeLabel, 'text', '联系人信息下载中。。。')


        local paras = 'departmentIdStr='..Config:get('department_id')..'&userId='..Config:get('userId')..'&versionNum=0'
        Log:write('首次登录时联系人URL = '..url_userversion..paras)
        Http:request('userversiondata0', url_userversion..paras, 104, {useCache = false})
    elseif msg == 120 then --下载第一个通讯分组下的用户
        local userversiondata1 = Http:jsonDecode('userversiondata3')
        Log:write("数据记录是否发成改变判断标识 updateFlag ：",userversiondata1.updateFlag)
        Sprite:setProperty(noticeLabel, 'text', '联系人信息下载中。。。')
            
        returnValue = userversiondata1.value 
        Log:write("用户数据返回最大版本号 versionNum：",returnValue[0].group_version_num)           
        totalNum = tonumber(userversiondata1.total)-1  
        rights = 0 
        initUserDatabase()
        
        if totalNum >= 0 then
            employee_version = returnValue[0].group_version_num 
            right_config = 0   
            local sql = "update tb_c_system set employee_version = '"..employee_version.."';"
            bRet, errMsg = Sqlite:update(databaseName, sql)

            local sql = "update tb_c_company set company_version = '"..employee_version.."' where company_id = '"..downLoadgroupID.."';"
            bRet, errMsg = Sqlite:update(databaseName, sql)
        end

        --if Loading:isShow() then Loading:close() end
        --Sprite:setProperty(noticeLabel, 'text', '正在进行页面跳转。。。')
        Timer:set(1,500,'jumpPage')

    elseif msg == 104 then  --下载企业下的用户信息
        local userversiondata1 = Http:jsonDecode('userversiondata0')
--        Log:write('userdata is ',userversiondata1)
        Log:write("数据记录是否发成改变判断标识 updateFlag ：",userversiondata1.updateFlag)
        Sprite:setProperty(noticeLabel, 'text', '联系人信息下载中。。。')
            
        returnValue = userversiondata1.value 
		Log:write("用户数据返回最大版本号 versionNum：",returnValue[0].group_version_num)			
        totalNum = tonumber(userversiondata1.total)-1   
        rights = 0
        initUserDatabase()        
        employee_version = returnValue[0].group_version_num
        right_config = 0
        Config:set('userVersion',employee_version)       
        Config:set('mobileRights',right_config)
        
        local sql = "update tb_c_system set employee_version = '"..employee_version.."';"
        bRet, errMsg = Sqlite:update(databaseName, sql)
        
        --if Loading:isShow() then Loading:close() end
        --Sprite:setProperty(noticeLabel, 'text', '正在进行页面跳转。。。')
        Timer:set(1,500,'jumpPage')

    elseif msg == 119 then --下载群组信息
        local companydata1 = Http:jsonDecode('companydata0')
        local total = companydata1.total   
        Log:write('===total====='..total)  
        if total > 0 then
            -- 更新最大分组版本号
            Log:write("群组:",companydata1["value"])
            local sql = "update tb_c_system set  company_version= '"..companydata1["value"][0].company_version.."';"
            bRet, errMsg = Sqlite:update(databaseName, sql)
            downLoadgroupID = companydata1["value"][0].group_id
            Log:write("群组版本号:bRet = "..bRet.." errMsg ="..errMsg)
            bRet, errMsg = Sqlite:update(databaseName, "BEGIN;")
            Log:write("群组添加事务开始:bRet = "..bRet.." errMsg ="..errMsg)
            for i=0,total-1 do
                local Valuedata = companydata1["value"][i]
                local company_id = Valuedata.group_id
                local company_name = Valuedata.group_name
                local org_flag = Valuedata.org_flag
                local index_logo = Valuedata.index_log
                if org_flag == '1' then 
                    org_f = true
                    downLoadgroupID = company_id
                end
                local sql
                if index_logo ~= nil then         
                    sql = "insert into tb_c_company(company_id,company_name,org_flag,index_logo,status) values ('"..company_id.."','"..company_name.."','"..org_flag .. "','"..index_logo.."','1' );"
                else
                    sql = "insert into tb_c_company(company_id,company_name,org_flag,status) values ('"..company_id.."','"..company_name.."','"..org_flag .."','1');"
                end
                --Log:write('下载群组插入语句==第i=='..i..'次==sql=='..sql)
                bRet, errMsg = Sqlite:update(databaseName, sql)
                --Log:write("载群组插入语句:bRet = "..bRet.." errMsg ="..errMsg)
                
            end
            bRet, errMsg = Sqlite:update(databaseName, "COMMIT;") 
            Log:write("群组添加事务结束:bRet = "..bRet.." errMsg ="..errMsg)
        end

        --如果有企业住处，则下载企业部门表，否则则下载第一个分组中的用户。
        if org_f == true then
        Sprite:setProperty(noticeLabel, 'text', '下载组织结构中。。。')
            local paras = '&userCode='..Config:get('userId')..'&deptCode=0'..'&deptList='..'&token='
            Http:request('departmentdata0', url_downdeptlist..paras, 102, {useCache = false})
            Log:write('首次登录时组织结构URL = '..url_userversion..paras)
        else
            local paras = '&group_id='..downLoadgroupID..'&userId='..Config:get('userId')..'&token='..'&group_version='
            Log:write('首次登录时联系人URL = '..url_downloadSingleCompany..paras)
            Http:request('userversiondata3', url_downloadSingleCompany..paras, 120, {useCache = false})
        end
        
    elseif msg == 111 then
        if Loading:isShow() then Loading:close() end
        local registerData = Http:jsonDecode('registerdata0')
        Log:write("注册返回数据==",registerData) 
        if registerData['success'] == 'true' then
            --Scene:go(Alias.m_login)
            Dialog:show('提示', '密码已经通过短信下发', 'ok')
            --"获取密码"按钮disable状态，显示倒计时
            local zhuceBtn = Sprite:findChild(rootSprite,'zhuceBtn')
            Sprite:setActive(zhuceBtn,0)
            Sprite:setEnable(zhuceBtn,0)
            Timer:set(222, 1000, 'getSmsCheckCodeTimer')     	
            else 
            Dialog:show('提示', '号码输入有误或非本集团用户', 'ok')
        end
    elseif msg > MSG_NETWORK_ERROR then -- 请求超时
        if Loading:isShow() then Loading:close() end
        Log:write('请求超时')
        Sprite:setProperty(noticeLabel, 'text', '请求超时，请重新登录')
    end
end

-- @brief 按键响应处理
function mainNodeOnKeyUp(sprite, kc)
    if kc == Key.F2 then -- 按下返回键
        if Loading:isShow() then
            Loading:close()
        else
            Dialog:show('提示', '是否确定退出？', 'ok_cancel', 'doExitApp')
        end
        return 1
    end
end

---------------------------------------util functions---------------------------
function initdatabase()
    databaseName = getLocalDiskPath()..'/jttxlDatabase'
    if IO:fileExist(databaseName) == true then 
        IO:fileRemove(databaseName)
    end
    Config:set('databaseName', databaseName)
    bRet, errMsg = Sqlite:open(databaseName) 
    Log:write("创建数据库成功:bRet = "..bRet.." errMsg ="..errMsg)
    local sq1 = "create table tb_c_department(department_id primary key not null, department_name,"..
        "parent_department_id , department_level, department_firstword, mark1, mark2, mark3, mark4, company_id);"
    bRet, errMsg = Sqlite:update(databaseName, sq1)
    Log:write("创建数据库表tb_c_department结果:bRet = "..bRet.." errMsg ="..errMsg)

    local sql = "create table tb_c_employee(employee_id ,company_id,employee_name,"..
        "department_id,department_name,parent_department_name,department_path,headship_level INTEGER,headship_name,mobile,mobile_short,"..
        "tel,tel_short,home_telephone,weibo,qq,weixin,school,user_major,user_grade,user_class,student_id,birthday,native_place,"..
        "address,home_address,remark,email,versionNum,picture,employee_firstword,employee_fullword,"..
        "display_order INTEGER, department_fax, manage_flag, mood , mark1, mark2, mark3, mark4,user_company_id primary key not null,company_address,user_company);"

    bRet, errMsg = Sqlite:update(databaseName,sql)
    Log:write("创建数据库表tb_c_employee结果:bRet = "..bRet.." errMsg ="..errMsg)
    local sq1 = "create table tb_c_system(system_id primary key not null, register_flag, department_version, "..
        "employee_version, user_id, right_config, employee_id, employee_name, department_id, department_name, department_level, mark1, mark2, mark3, mark4 ,company_version);"
    bRet, errMsg = Sqlite:update(databaseName, sq1)
    Log:write("创建数据库表tb_c_system结果:bRet = "..bRet.." errMsg ="..errMsg)
    local sq1 = "create table tb_c_company(company_id primary key not null,company_code,parent_company_id,company_name,province,city,"..
    "town,index_logo,index_pictrue,status,display_order INTEGER,org_flag,mark1,mark2,mark3,mark4,company_version);"
    bRet, errMsg = Sqlite:update(databaseName, sq1)
    Log:write("创建数据库表tb_c_company结果:bRet = "..bRet.." errMsg ="..errMsg)
    local sql2 = "create table tb_c_user_department(user_department_id varchar(32) primary key not null,user_company_id varchar(32),headship_id varchar(32),headship_name varchar(200),department_id varchar(32),department_path varchar(800),taxis int,visible_flag varchar(1),mark1 varchar(200), mark2 varchar(200));"
    bRet,errMsg = Sqlite:update(databaseName,sql2)
    Log:write("创建数据库表tb_c_user_department结果:"..bRet.." errMsg="..errMsg)
end

function getDownloadPath()
    local downloadPath = ''
    local flashCard = System:getFlashCardName(1) -- 判断外置存储卡存在性
    if flashCard and flashCard ~= '' then --存在外置存储卡
        Log:write('Util:getDownloadPath  flashCard=================', flashCard)
        downloadPath = flashCard
    end
    Log:write('Util:getDownloadPath=======================', downloadPath)
    return downloadPath
end

function initEditText(sprite)   
    nms = {"usernameEdit","passwordEdit"}
    local spriteName = Sprite:getName(sprite)
    msg = {"请输入您的手机长号","请输入密码"}
    local txt= Sprite:getProperty(sprite, 'text')
    for i=1,#msg do
        if txt == msg[i] then
            Sprite:setProperty(sprite, 'text', '')
            Sprite:setProperty(sprite, 'color', '#ffffff')
            if 2==i then Sprite:setProperty(sprite, 'password', 'true') end
        end
    end
end

function lostEditText(sprite)
    nms = {"usernameEdit","passwordEdit"}
    local spriteName = Sprite:getName(sprite)
    msg = {"请输入您的手机长号","请输入密码"}
    local txt= Sprite:getProperty(sprite, 'text')
    for i=1,#nms do
        if spriteName == nms[i] and txt == ''  then
            Sprite:setProperty(sprite, 'text', msg[i])
            Sprite:setProperty(sprite, 'color', '#7a7a7a')
            if 2==i then Sprite:setProperty(sprite, 'password', 'false') end
        end
    end
end

function zhuceBtnOnSelect()
    local usernameEdit= Sprite:findChild(rootSprite,'usernameEdit')
    local imeicode = System:getMachineInfo(4) 
    local imsicode = System:getMachineInfo(5) 
    if imeicode == nil or imeicode == '' then
        imeicode = '0'
    end
    if imsicode == nil or imsicode == '' then
        imsicode = '0'
    end
    if Sprite:getText(usernameEdit)~='请输入您的手机长号' and Sprite:getText(usernameEdit)~='' then
        local paras = 'type=0&mobile='..Sprite:getText(usernameEdit).."&IMEI="..imeicode.."&IMSI="..imsicode
        Http:request('registerdata0', url_register..paras, 111, {useCache = false})
        Loading:show(rootSprite) 
        else 
        Dialog:show('提示', '手机号码不能为空', 'ok')
    end
end

function btnloginOnSelect(sprite)
    UmsAgent:onLoadStart()
    local imeicode = System:getMachineInfo(4) 
    local imsicode = System:getMachineInfo(5) 
    local username=Sprite:getText(Sprite:findChild(rootSprite, 'usernameEdit'))
    local password=Sprite:getText(Sprite:findChild(rootSprite, 'passwordEdit'))
    if imeicode == nil then imeicode = "" end
    Log:write('loginOnSelect: imei = '..imeicode)
    if imsicode == nil then imsicode = "" end
    Log:write('loginOnSelect: imsi = '..imsicode)
    
    if username == '' or username == '请输入您的手机长号' then
        Dialog:show('提示','用户名不能为空!','ok')
    elseif password == '' or password == '请输入密码' then
        Dialog:show('提示','密码不能为空','ok')
    else
        local dataString = string.format('userCode=%s&password=%s&IMEI=%s&IMSI=%s', 
            username, password, imeicode, imsicode)
        local url_login1 = url_login..dataString
        Log:write('===登录请求=====reqURL====', url_login1)
        Http:request('login_istrue', url_login1, 101, {useCache=false})
        Sprite:setProperty(noticeLabel, 'text', '正在登录中。。。')
        Loading:show(rootSprite) 
    end
end

function writeuserInfo()
    Config:set('employee_name', loginData.employee_name)
    Config:set('department_id', loginData.department_id)
    Config:set('department_name', loginData.department_name)
    Config:set('department_level', loginData.department_level)
    Config:set('employeeId', loginData.employee_id)
    Config:set('token', loginData.token)
    Config:set('userId', loginData.user_id)
    local username=Sprite:getText(Sprite:findChild(rootSprite, 'usernameEdit'))
    local password=Sprite:getText(Sprite:findChild(rootSprite, 'passwordEdit'))
    Config:set('username', username)
    Config:set('password', password)
    Log:write('===writeuserInfo==userId=='..Config:get('userId'))
    local sql = "insert into tb_c_system(system_id, register_flag, department_version, "..
        "employee_version, user_id, right_config, employee_id, employee_name, department_id, department_name, department_level, mark1, mark2, mark3, mark4 ,company_version) values ('001','"..Config:get('DatabaseVersion').."','"..department_version.."','"..employee_version..
        "','"..loginData.user_id.."','"..username.."','"..loginData.employee_id.."','"..loginData.employee_name..
        "','"..loginData.department_id.."','"..loginData.department_name.."','"..loginData.department_level.."' ,'1' ,'' ,'' ,'','');"
    Log:write('系统表插入语句==sql=='..sql)
    bRet, errMsg = Sqlite:update(databaseName, sql)
    Log:write("系统表插入结果:bRet = "..bRet.." errMsg ="..errMsg)
end

--跳转页面
function jumpPage()
    Config:set('forceUpdateDatabase', '0')
    Log:write("forceUpdateDatabase2= "..Config:get('forceUpdateDatabase'))
    UmsAgent:writeCallLog()
    -- hewu 进入最近联系人之前，设置强制进入注册页面标志位为0
    -- 防止没有调用到三码合一接口或调用失败导致重复注册
    Config:set('forceUpdateDatabase', "0")
    if g_ECCode == nil  or g_ECCode == '' then
        Scene:setReturn(Alias.m_login, Alias.m_recentContacter)
        Scene:go(Alias.m_recentContacter, true)
    else
    --判断是否需要下载皮肤
    --if Loading:isShow() ~= true then Loading:show() end
        checkEcSkinFlag()
    end
end


-- 退出前如果在在内网，需要进行APN切换
function doExitApp()
    if Config:get('server_url') == '10.225.222.5' then 
        Loading:show()
        showSysSetting()
        -- 网络连接发生切换后，需要在相应的MSG_NETWORK中
        -- 调用doExit()函数
        g_exitFlag = true
    else
        bRet = Sqlite:close(databaseName)
        Log:write("关闭数据库:bRet = "..bRet)
        Scene:exit()
    end
end

-- 初始化本地人员表
function initUserDatabase()
    -- 清空用户表中数据
    local sqlClear = "DELETE FROM tb_c_employee;"
    Log:write("sqlClear = ",sqlClear)
    bRet, errMsg = Sqlite:update(databaseName, sqlClear)
    Log:write("清空用户表:bRet = "..bRet.." errMsg ="..errMsg)    

    bRet, errMsg = Sqlite:update(databaseName, "BEGIN;")
    Log:write("首次安装应用--人员添加事务开始:bRet = "..bRet.." errMsg ="..errMsg)
    for i=0,totalNum do 
            -- 新增用户SQL
        local sqlInsert = "insert into tb_c_employee(employee_id ,company_id,employee_name,"..
        "department_id,department_name,headship_level,headship_name,mobile,mobile_short,"..
        "tel,tel_short,home_telephone,weibo,weixin,qq,school,user_major,user_grade,user_class,student_id,birthday,native_place,"..
        "address,home_address,remark,email,versionNum,picture,employee_firstword,employee_fullword,"..
        "parent_department_name,display_order, department_fax, manage_flag, mood , mark1, mark2, mark3, mark4,user_company_id,company_address,user_company)" ..
            " values('"..returnValue[i].employee_id.."','"..returnValue[i].company_id.."','"..
            returnValue[i].employee_name.."','"..returnValue[i].department_id.."','"..
            returnValue[i].department_name.."','','"..
            returnValue[i].headship_name.."','"..returnValue[i].mobile.."','"..
            returnValue[i].mobile_short.."','"..returnValue[i].tel.."','"..
            returnValue[i].tel_short.."','"..returnValue[i].home_telephone.."','"..
            returnValue[i].weibo.."','"..returnValue[i].weixin.."','"..
            returnValue[i].qq.."','"..returnValue[i].school.."','"..
            returnValue[i].user_major.."','"..returnValue[i].user_grade.."','"..
            returnValue[i].user_class.."','"..returnValue[i].student_id.."','"..
            returnValue[i].birthday .."','"..returnValue[i].native_place.."','"..
            returnValue[i].address.."','"..returnValue[i].home_address.."','"..
            returnValue[i].remark.."','"..returnValue[i].email.."','"..
            returnValue[i].group_version_num.."','"..returnValue[i].picture.."','"..
            returnValue[i].employee_firstword.."','"..returnValue[i].employee_fullword.."','"..returnValue[i].parent_department_name..
            "','"..returnValue[i].display_order.."','"..returnValue[i].department_fax.."','"..
            returnValue[i].manage_flag.."','"..returnValue[i].mood.."' ,'' ,'' ,'' ,'','"..returnValue[i].user_company_id.."','"..returnValue[i].company_address.."','"..returnValue[i].user_company.."');"                  
            bRet, errMsg = Sqlite:update(databaseName, sqlInsert)
            --Log:write("sqlInsert 语句：",sqlInsert)
            --Log:write('deptList is ',returnValue[i].deptList) 
            --插入用户部门信息
            local deptList = returnValue[i].deptList
            --Log:write('deptlist size is ',#deptList)
            --Log:write("user_department_id is ",deptList[0].user_department_id)
            if deptList ~= nil then
                for i=0,#deptList do
                    local dept_path = deptList[i].department_path
                    if dept_path == nil then dept_path = '' end
                    local gheadship_name = deptList[i].headship_name
                    if gheadship_name == nil then gheadship_name = '' end
                    local sqlInsert = "insert into tb_c_user_department (user_department_id,user_company_id,headship_id,headship_name,department_id,department_path,taxis,headship_name)"
                    sqlInsert = sqlInsert .." values ('"..deptList[i].user_department_id.."','"..deptList[i].user_company_id.."','"..deptList[i].headship_id.."','"..gheadship_name.."','"..deptList[i].department_id.."','"..dept_path.."',"..deptList[i].taxis..",'"..deptList[i].headship_name.."');"
                    --Log:write('department insert sql is ',sqlInsert)
                    bRet,errMsg = Sqlite:update(databaseName,sqlInsert)
                end
            end
    end
    bRet, errMsg = Sqlite:update(databaseName, "COMMIT;") 
    Log:write("首次安装应用--人员添加事务结束:bRet = "..bRet.." errMsg ="..errMsg)
end

--获取短信后disable"获取密码按钮" 并倒计时50秒
function getSmsCheckCodeTimer()
    local zhuceBtn = Sprite:findChild(rootSprite,'zhuceBtn')
    if(timeNum>0) then
        timeNum = timeNum - 1
        Sprite:setProperty(zhuceBtn,'text','获取密码('..timeNum..')')
        Timer:set(222, 1000, 'getSmsCheckCodeTimer')
    else
        timeNum = 50
        Sprite:setActive(zhuceBtn,1)
        Sprite:setEnable(zhuceBtn,1)
        Sprite:setProperty(zhuceBtn,'text','获取密码')
        Timer:cancel(222)
    end
end


function getGroupData()
    local sql = "SELECT * FROM tb_c_company"
    bRet,groupData,errMsg = Sqlite:query(databaseName, sql)
    Log:write("搜索分组SQL: ",errMsg)
    Log:write("搜索分组结果: ",groupData)
    len = tonumber(getJsonArrayCount(groupData))-1
    Log:write("分组列表记录数目：",len)
    downLoadgroupID = -1
    for j = 1, len do
        Log:write("分组记录：",j)
        if groupData[j][17] == '' then
	        if downLoadgroupID == -1 then
	           downLoadgroupID = groupData[j][1]
	        end
	        
	        if groupData[j][12] == '1' then
                downLoadgroupID = groupData[j][1]
                Log:write("下载的分组id: ",downLoadgroupID)
                return
            end
        end
    end
    Log:write("下载的分组id: ",downLoadgroupID)
end

function setVersionNum(version)
    local sql = "update tb_c_company set  company_version= '"..version.."'where company_id = '"..downLoadgroupID.."';"
    Log:write('更新系统表语句==sql=='..sql)
    bRet, errMsg = Sqlite:update(databaseName, sql)
    Log:write("系统表更新数据:bRet = "..bRet.." errMsg ="..errMsg)   
end

---------------------------换肤相关函数列表---------------------
-- @brief 检查配置文件，确认是否需要下载皮肤
function checkEcSkinFlag()
    Log:write("===检查配置文件，确认是否需要下载皮肤===")
    g_skinPath = Config:get('skinPath')
    if isSkinAvailable() == false then   --需要下载皮肤
        Log:write("尝试下载皮肤文件...") 
        Sprite:setProperty(noticeLabel, "text", "下载皮肤中...")
        checkEcSkin() 
    else
        Log:write("不需要下载皮肤文件...") 
        if Loading:isShow() then Loading:close() end
        Sprite:setProperty(noticeLabel, 'text', '正在进行页面跳转。。。')
        Scene:setReturn(Alias.m_login, Alias.m_recentContacter)
        Scene:go(Alias.m_recentContacter, true)
    end
end

-- @brief 返回皮肤文件是否有效
function isSkinAvailable()
    Log:write("本地皮肤路径为:"..g_skinPath)
    if g_skinPath == nil or g_skinPath == "" or IO:dirExist(g_skinPath) == false then
        Log:write("皮肤目录不存在或为空!")
        return false
    end 
    Log:write("皮肤目录存在!")
    Config:set('skinPath', g_skinPath)
    Config:set('skinFlag', '1')
    return true
end 

-- @brief 需要下载皮肤文件，新建下载任务
function checkEcSkin()
    Log:write("===正在建立下载任务===")
    g_localpath = getDownloadPath()
    Log:write("本地文件路径为:",g_localpath)
    g_patchUrl=url_downskin..g_ECCode      -- 路径命名规则按照企业ECcode
    Log:write("服务端文件路径为:",g_patchUrl)
    Timer:cancel(112)
    local count = Download:getCount(true)
    for i = 1, count do
        Download:delete(i, false, true)
    end
    Log:write("下载历史记录已清除.")
    Download:append(g_localpath, g_ECCode, g_patchUrl, true)
    Log:write("添加下载队列中成功，任务名为:"..g_ECCode)
    onGetDownloadStatus()
end


-- @brief 显示下载状态
function onGetDownloadStatus()
    local count = Download:getCount(true)
    -- Log:write("当前任务数:"..count)
    if count == 0 then 
        Log:write("当前无下载任务，停止显示下载状态！")
        return 
    end
    
    -- 迭代下载队列
    for i = 1, count do
        local task = Download:getStatus(count, true)
        if task.title == g_ECCode then   
            -- Log:write("任务状态:", task)
           
            if  task.status == 0 then 
                Download:start(count, true)
                Timer:set(112, 500, 'onGetDownloadStatus')
            elseif task.status == 1 then -- 空间不足
                Dialog:show('抱歉', '本地空间不足，请清理磁盘后重试!', 'ok')
                return
            elseif task.status == 2 then -- 下载中  
                Log:write("正在下载中！")  
                Timer:set(112, 500, 'onGetDownloadStatus')
            elseif task.status == 3 then -- 下载暂停
                Download:start(count, true)
                Timer:set(112, 500, 'onGetDownloadStatus')
            elseif task.status == 4 then -- 下载完毕
                Sprite:setProperty(noticeLabel, 'text', '完成')
                Download:delete(count, false, true)    
                unzipSkin() 
                Timer:set(333, 1000)  
            elseif task.status == 5 then -- 下载失败
                Dialog:show('抱歉', '皮肤下载失败，请检查服务是否可用!', 'ok')
                return
            else
                Dialog:show('抱歉', '皮肤下载失败，发生未知错误!', 'ok')
                return
            end

        end
    end

end

-- @brief 解压缩皮肤文件
function unzipSkin()
    Log:write("===正在替换皮肤文件===")
    Log:write("皮肤文件路径为:"..g_localpath)
    Log:write("解压目标路径为:"..g_localPatchPath)
    local rtn = Util:unzip(g_localpath, g_localPatchPath) --下载完成进行解压缩操作
    if rtn then --表示解压成功
        g_skinFlag = '1'
        Config:set('ECCode', g_ECCode)
        Config:set('skinFlag', g_skinFlag)
        Config:set('skinPath', g_localPatchPath)
    else
        Dialog:show('抱歉', '解压失败', 'ok')
    end
    if Loading:isShow() then Loading:close() end
    Sprite:setProperty(noticeLabel, 'text', '正在进行页面跳转。。。')
    goHome()
end

-- 跳转至首页
function goHome()
    Scene:setReturn(Alias.m_login, Alias.m_recentContacter)
    Scene:go(Alias.m_recentContacter, true)
end

-- 获取本地皮肤文件的路径
function getDownloadPath()
    g_localpath = getLocalDiskPath()
    Log:write('g_localpath is ',g_localpath)
    -- 如果路径不存在，创建下载目录
    if IO:dirExist(g_localpath) == false then 
        IO:dirCreate(g_localpath)
    end
    Log:write('g_ECCode is ',g_ECCode)
    -- 返回皮肤文件的路径
    g_localPatchPath = g_localpath
    g_localpath = g_localpath.."/"..g_ECCode
    return g_localpath
end

]]>
</root>
