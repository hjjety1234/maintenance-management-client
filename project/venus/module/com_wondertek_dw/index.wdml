<?xml version="1.0" encoding="utf-8"?>
<!--
 == ============================================================================
 == | WonderTek [ 网络无处不在，沟通及时到达 ]
 == ============================================================================
 == | Copyright (c) 2012, WonderTek, Inc. All Rights Reserved.
 == ============================================================================
 == | Author: hewu <hewu2008@gmail.com>
 == ============================================================================
 == | Desc: 登陆（入口）页
 == | 2012/12/11 添加自动升级功能
 == | 2013/03/15 新增增量升级功能
 == ============================================================================
-->
<root>
    <header/>
    <body resolution="480,800" BuildChildrenFinished="bodyBuildChildrenFinished" OnSpriteEvent="bodyOnSpriteEvent" OnPluginEvent="bodyOnPluginEvent">
        <node name="mainNode" rect="0,0,480,800" enable="true" active="true" 
                OnKeyUp="mainNodeOnKeyUp" layouttype="1" extendstyle="1111">
            <image rect="0,0,0,0" extendstyle="0077" src="file://image/index.png" 
                style="autosize"/>
                
			<!-- 登录和版本检测进度条  -->
			<node name="scrollBarNode" rect="185,500,110,12" 
			OnTick="scrollOnTick" frame="true" extendstyle="1111">
			<image name="scrollBgImg" rect="0,0,110,12" 
				src="file://image/login_scroll_bg.png" extendstyle="1111" />
			<image name="scrollImg" rect="0,0,40,12" 
			        src="file://image/login_scroll.png" extendstyle="1111" />
			</node>

			<!-- 下载进度指示 -->
			<node name="downloadingNode" rect="163,500,0,0" visible="false"
			    enable="false" extendstyle="1111">
			    <image name="progressBg" rect="0,0,154,10" style="autosize" 
			        src="file://image/login_progress_bg.png" extendstyle="1111" />
			    <image name="progressImg" rect="0,0,0,10" style="autosize"
			        src="file://image/login_progress.png" extendstyle="1111" />
			    <label name="proLab" rect="164,-8,160,26" text="0KB/0KB" 
			        font-size="16" color="#ffffff" v-align="center" h-align="left" 
			        extendstyle="1111" />
			    <label name="speedLab" rect="-170,-8,160,26" text="0KB/S" 
			        font-size="16" color="#ffffff" v-align="center"
			        h-align="right" extendstyle="1111" />
			</node>
            
			<!-- 文本通知信息  -->
			<label name="noticeLbl" rect="0,525,480,30" font-size="20" 
			    text="" v-align="center" h-align="center" color="#ffffff" 
			    extendstyle="1111" />

            <!-- 普通升级框  -->
            <node name="upgradeNode" rect="0,0,480,800"  visible="false" enable="false" style='autosize'>
                <shadow rect="0,0,480,800" color="#333333" alpha="125"/>
                <image rect="66,215,368,68" src="file://image/top.png"  style="autosize" extendstyle="0010" >
                    <label rect="20,20,240,68" border="false" color="#FFFFFF" style="autosize"
                    text="版本更新" h-align="left" v-align="top" font-family="微软雅黑" font-size="24"/>
                </image>
                <image rect="66,264,368,316" src="file://image/center.png"  style="autosize" extendstyle="1111" >
                    <textarea name='update'   rect="15,10,338,300" step="1" loop='true' border="false" color="#303030" style="autosize"
                    text="" h-align="left" v-align="top" font-family="微软雅黑" font-size="22" extendstyle="1111"/>
                </image>
                <!--升级-->
                <button  rect="126,534,94,38" border="false" enable='true'
                 extendstyle="1111" OnSelect="downloadPackage" style='autosize' >
                    <image rect="10,1,94,38" src="file://image/btn_yes.png" style="autosize" 
                        extendstyle="1111">
                        <label rect="15,5,60,30" border="false" color="#FFFFFF" style="autosize"
                        text="更新" h-align="center" v-align="top" font-family="微软雅黑" font-size="26"/>
                    </image> 
                </button>
                <!--不升级-->
                <button  rect="266,534,94,38" border="false"  enable='true'
                extendstyle="1111" OnSelect="goLogin" style='autosize'>
                    <image rect="10,1,94,38" src="file://image/btn_no.png" style="autosize" 
                        extendstyle="1111" >
                        <label rect="15,5,60,30" border="false" color="#FFFFFF" style="autosize"
                        text="取消" h-align="center" v-align="top" font-family="微软雅黑" font-size="24"/>
                    </image>
                </button>
                <image rect="66,578,368,21" src="file://image/bottom.png"  style="autosize" extendstyle="1111"/>
            </node>

            <!-- 增量升级框 -->
            <node name="diffUpdateNode" rect="0,0,480,800"  visible="false" enable="false" 
                extendstyle="1111" style='autosize'>
                <shadow rect="0,0,480,800" color="#333333" extendstyle="1111" alpha="125"/>
                <image rect="66,215,368,50" src="file://image/top.png"  style="autosize" extendstyle="1111" >
                    <label rect="20,20,240,30" border="false" color="#FFFFFF" style="autosize"
                    text="版本更新" h-align="left" v-align="top" font-family="微软雅黑" font-size="24"/>
                </image>
                <!-- 对话框背景 -->
                <image rect="66,264,368,200" src="file://image/center.png"  
                    style="autosize" extendstyle="1111" border="false" >
                </image>
                <!-- 当前APP版本信息 -->
                <image rect="80,270,40,40" border="false" src="file://image/app_icon.png" 
                    style="autosize" extendstyle="1111" visible="true">
                </image>
                <label name="appName" rect="130,270,50,25" text="代维" 
                    font-family="微软雅黑" font-size="22" color="#0" 
                    v-align="center" h-align="left" extendstyle="1111" />
                <label name="appVersion" rect="130,295,50,15" text="" 
                    font-family="微软雅黑" font-size="18" color="#0" 
                    v-align="center" h-align="left" extendstyle="1111" />
                <!-- 升级信息 -->
                <label name="pkgSize" rect="180,270,120,25" text="" 
                    font-family="微软雅黑" font-size="22" color="#0" 
                    v-align="center" h-align="center" extendstyle="1111" />
                <shadow rect="200,284,80,2" border="false" 
                    color="#0" extendstyle="1111" visible="true">
                </shadow>
                <label name="patchSize" rect="180,295,120,15" text="" 
                    font-family="微软雅黑" font-size="16" color="#92D148" 
                    v-align="center" h-align="center" extendstyle="1111" />
                <!-- 升级操作 -->
                <button rect="310,270,50,40" border="false"  enable='true'
                    extendstyle="1111" OnSelect="downloadPatch" style='autosize'>
                    <image rect="0,7,50,30" src="file://image/btn_yes.png" style="autosize" 
                        extendstyle="1111" >
                    </image>
                    <label rect="0,0,50,40" border="false" color="#ffffff" style="autosize"
                        text="升级" h-align="center" v-align="center" 
                        font-family="微软雅黑" font-size="22"/>
                </button>
                <!-- 取消升级 -->
                <button rect="370,270,50,40" border="false"  enable='true'
                    extendstyle="1111" OnSelect="goLogin" style='autosize'>
                    <image rect="0,7,50,30" src="file://image/btn_no.png" style="autosize" 
                        extendstyle="1111" >
                    </image>
                    <label rect="0,0,50,40" border="false" color="#ffffff" style="autosize"
                        text="取消" h-align="center" v-align="center" 
                        font-family="微软雅黑" font-size="22"/>
                </button>
                <textarea name='releaseLog' rect="80,320,340,145" step="1" loop='true' border="false" 
                    color="#303030" style="autosize" text="" h-align="left" v-align="top" 
                    font-family="微软雅黑" font-size="22" extendstyle="1111"/>
                <!-- 对话框底部 -->
                <image rect="66,462,368,21" src="file://image/bottom.png"  
                    style="autosize" extendstyle="1111" border="false"/>
            </node>
       	</node>
    </body>
    <![CDATA[

require 'com_wondertek_dw.common.framework'
require 'framework.umsagent'
require 'framework.msgpush'
require 'framework.appmanager'
require 'framework.download'
local rootSprite

local g_packageUrl = nil            -- 客户端升级包url地址
local g_patchUrl = nil              -- 补丁包下载url地址
local g_releaseLog = nil            -- 版本升级说明

local g_localpath = nil             -- 下载apk路径
local g_tempPath = nil              -- 临时下载目录
local g_localPatchPath = nil        -- 下载patch路径
local g_localPatchResult = nil      -- 补丁更新后的文件路径

local g_updateMethod = 0            -- 更新方法：0为全新升级，1为差分升级

local g_downloadTime = 0            -- 记录下载所花的时间
local g_progressWidth = 154         -- 进度条长度


---------------------------------------回调函数列表--------------------------------
-- root子节点创建完事件
function bodyBuildChildrenFinished(sprite)
    rootSprite = sprite
    connectToWAP()
    UmsAgent:postClientData()

    -- 设置消息推送
    MsgPush:bindHostIp('120.209.131.150') 
    Log:write("bindHostIp()")
    MsgPush:setListener(Sprite:getCurScene(), 1001) 
    Log:write("setListener()")
    local appKey = UmsAgent:getAppKey()
    MsgPush:setApiKey(appKey)
    MsgPush:setServiceStatus(1)
    Log:write("setServiceStatus()")
end

--  root节点消息方法
function bodyOnSpriteEvent(msg, param)
    if msg == MSG_ACTIVATE then
        System:setFontSize()
	    if SCREEN_WIDTH >= 700 then
	        System:changeSkin('MODULE:\\com_wondertek_dw/image/skin/skin.dat', 
	        'MODULE:\\com_wondertek_dw/image/skin/')
            Log:write('123',SCREEN_WIDTH)
	    else
	        System:changeSkin('MODULE:\\com_wondertek_dw/image/skin/skin1.dat', 
	        'MODULE:\\com_wondertek_dw/image/skin/')
            Log:write('456',SCREEN_WIDTH)
	    end
	    checkClientVersion()
    elseif msg == MSG_DEACTIVATE then
        Scene:freeByHandle(rootSprite)
    elseif msg == MSG_NETWORK then
        Log:write('param', param)
        local paramFlag = param.flag
        local paramStatus = param.networkstatus
        if paramStatus == NETWORK_CONNECTED then
              checkClientVersion()
        elseif paramStatus == NETWORK_ERROR then
            if paramFlag == 5  then
                 Dialog:show('提示', '网络连接失败，要打开APN设置界面进行设置吗？', 'ok_cancel', 'showSysSetting', 'doExit')
            end
        end
    end
end

--  插件消息方法
function bodyOnPluginEvent(msg, param)
    if msg == 101 then
    elseif msg == 102 then --  版本检测
        Loading:close()
        local checkversionData = Http:jsonDecode('index_checkversion')
        Log:write("version_data:", checkversionData)
        if checkversionData and checkversionData['version'] then
            g_packageUrl = checkversionData['version']['url']
            g_patchUrl = checkversionData['version']['patchUrl']
            if tonumber(checkversionData['version']['isNeedUpdate']) == 0 then  -- 不需要升级
                goLogin()
            elseif tonumber(checkversionData['version']['isNeedUpdate']) == 1 then -- 提示升级
                g_releaseLog = checkversionData.version.releaseLog
                doUpgrade(checkversionData.version.md5sum)
            elseif tonumber(checkversionData['version']['isNeedUpdate']) == 2 then -- 强制升级
                local update = Sprite:findChild(rootSprite,'update')
                Sprite:setProperty(update,'text',checkversionData.version.releaseLog)
                downloadPackage()
                return
            else
                goLogin()
            end
        else
            Dialog:show('', '版本检测返回的数据异常，请检查网络！', 'ok', 'goLogin')
        end
        -- 隐藏登录和版本检查进度
        local scrollBarNode = Sprite:findChild(rootSprite, 'scrollBarNode')
        Sprite:setVisible(scrollBarNode, 0)
        Sprite:setEnable(scrollBarNode, 0)
    elseif msg == 1001 then
        local title = Param:getString(param, 0)
        local msg = Param:getString(param, 1)
        local uri = Param:getString(param, 2)
        Log:write("消息推送: title="..title)
        Log:write("msg="..msg)
        Log:write("url="..msg)
        Scene:setReturn(Alias.index, Alias.m_login)
        Scene:go(Alias.m_login)
    elseif msg == 101 + MSG_CACHEDATA_RELOAD then -- 101请求的数据有更新
    elseif msg == 101 + MSG_NETWORK_ERROR then -- 101请求的数据超时
    elseif msg == MSG_NETWORK_ERROR then -- 拨号失败
        Log:write('拨号失败')
    elseif msg > MSG_NETWORK_ERROR then -- 请求超时
        Log:write('请求超时')
    end
end

--  按键响应处理
function mainNodeOnKeyUp(sprite, kc)
    if kc == Key.F2 then -- 按下返回键
        Scene:exit()
        return 1
    end
end

-- 显示系统设置
function showSysSetting()
    ShowNetSetting()
end

-- 转到登录页
function goLogin()
    Scene:go(Alias.m_login, true, true)
end

-- 退出程序
function doExit()
    Scene:exit()
end

---------------------------------------APN相关函数---------------------------
--  连接移动网络
function connectToWAP()
    local APNtype = Http:getCurrentAPNType()
    if APNtype == 1 then                     -- Net网
        Http:setProxy('')
    elseif APNtype == 2 then                 --移动wap
        Http:setProxy('http://10.0.0.172:80/')
    elseif APNtype == 3 then                 --电信wap
        Http:setProxy('http://10.0.0.200:80/')
    elseif APNtype == 4 then                 --联通wap
        Http:setProxy('http://10.0.0.172:80/')
    else
        Http:setProxy('')
    end
    Http:startNetwork()
    local noticeLbl = Sprite:findChild(rootSprite, 'noticeLbl')
    Sprite:setProperty(noticeLbl, 'text', '正在检测网络...')
end

function checkAPNSetting()
    -- 检查APN状态
    local noticeLblSprite = Sprite:findChild(rootSprite, "noticeLbl")
    Sprite:setProperty(noticeLblSprite, "text", "正在检查APN设置...")
    -- 尝试连接网络
    local APNtype = Http:getCurrentAPNType()
    Log:write('APN类型为:'..APNtype)
    if APNtype == 1 then                     -- Net网
        Http:setProxy('')
    elseif APNtype == 2 then                 --移动wap
        Http:setProxy('http://10.0.0.172:80/')
    elseif APNtype == 3 then                 --电信wap
        Http:setProxy('http://10.0.0.200:80/')
    elseif APNtype == 4 then                 --联通wap
        Http:setProxy('http://10.0.0.172:80/')
    else
        Http:setProxy('')
    end
    Http:startNetwork()
end

-----------------------版本升级相关函数 --------------------------
-- 登录和版本检查进度条
function scrollOnTick(sprite)
    local scrollImg = Sprite:findChild(sprite, 'scrollImg')
    local x, y, w, h = Sprite:getRect(scrollImg)
    if x > 110 then
        x = -40
    end
    Sprite:setRect(scrollImg, x + 7, y, w, h)
end

-- 检测客户端版本
function checkClientVersion()
    local noticeLblSprite = Sprite:findChild(rootSprite, "noticeLbl")
    Sprite:setProperty(noticeLblSprite, "text", "版本检测中...")
    local webcloud = Config:get('webcloud')
    local appKey = UmsAgent:getAppKey()
    local appVer = Config:get('app_version')
    local requestURL = string.format('http://%s/webcloud/sso/sso_upgrade.html?appkey=%s&version=%s', 
        webcloud, appKey, appVer)
    Log:write('info: checkClientVersion() requestURL=', requestURL)
    Http:request('index_checkversion', requestURL, 102, {useCache = false})
end

-- 根据增量升级的条件，进行全新升级或增量升级
function doUpgrade(md5sum)
    Log:write("存在升级信息，开始升级...")
    local bDiffUpdate = true
    getDownloadPath()
    -- g_patchUrl = "http://120.209.131.146/patch_dir/Venus_DW.patch"
    -- 检查差分包的URL地址
    if g_patchUrl == nil or g_patchUrl == "" then 
        Log:write("差分包的URL地址为空！")
        bDiffUpdate = false
    end
    -- 检查本地旧本地文件是否存在 
    if IO:fileExist(g_localpath) == false then
        Log:write("本地文件不存在！")
        bDiffUpdate =  false
    end
    -- 开始升级
    if bDiffUpdate == true then
        Log:write("显示增量升级对话框")
        local packagesize = getHttpFileSize(g_packageUrl, g_tempPath.."/Venus_DW.apk")
        local patchsize = getHttpFileSize(g_patchUrl, g_tempPath.."/Venus_DW.patch")
        -- 显示差分升级对话框
        local appVersion = Sprite:findChild(rootSprite, 'appVersion')
        Sprite:setProperty(appVersion, 'text', 'v'..Config:get("app_version"))
        local releaseLog = Sprite:findChild(rootSprite, 'releaseLog')
        Sprite:setProperty(releaseLog, 'text', g_releaseLog)
        local pkgSize = Sprite:findChild(rootSprite, 'pkgSize')
        Sprite:setProperty(pkgSize, 'text', packagesize)
        local patchSizeLabel = Sprite:findChild(rootSprite, 'patchSize')
        Sprite:setProperty(patchSizeLabel, 'text', "仅需"..patchsize)
        local diffUpdateNode = Sprite:findChild(rootSprite, 'diffUpdateNode')
        Sprite:setProperty(diffUpdateNode, 'visible', 'true')
        Sprite:setProperty(diffUpdateNode, 'enable', 'true')
    else
         Log:write("显示全新升级对话框")
        local update = Sprite:findChild(rootSprite, 'update')
        Sprite:setProperty(update, 'text', g_releaseLog)
        local mainNode = Sprite:findChild(rootSprite, 'mainNode')
        local upgradeNode = Sprite:findChild(rootSprite, 'upgradeNode')
        Sprite:setProperty(upgradeNode,'visible','true')
        Sprite:setProperty(upgradeNode,'enable','true')
    end
end

-- 获取http文件大小, 需要先下载到本地
function getHttpFileSize(url, localPath)
    __remove_all_download()
    if IO:fileExist(localPath) ==  true then 
        IO:fileRemove(localPath)
    end
    if url == nil or url == "" then 
        Log:write("getHttpFileSize: url 地址为空")
        return getReadableSize(0)
    end
    Download:append(localPath, 'packagesize', url, true)
    local count = Download:getCount(true)
    for i=1, count do 
        for j=1, 1000 do -- 尝试取1000次
            local task = Download:getStatus(i, true)
            Log:write("task", task)
            if task.title == 'packagesize' and task.maxsize ~= 0 then
                local maxsize = task.maxsize
                __remove_all_download()
                return getReadableSize(maxsize)
            elseif task.title == "packagesize" then 
                Download:start(i, true)
            end
        end
    end
    __remove_all_download()
    return getReadableSize(0)
end

-- 格式化文件大小，转换为可读的格式
function getReadableSize(size)
    Log:write("当前文件大小:"..size)
    local strFileSize = "0B"
    if size < 1024 then 
        strFileSize = tostring(size).."B"
    elseif size / 1024 < 1024 then 
        strFileSize = string.format("%.2fKB", size / 1024)
    elseif size / 1048576 < 1024 then 
        strFileSize = string.format("%.2fMB", size / 1048576)
    else
        strFileSize = string.format("%.2fGB", size / 1073741824)
    end
    return strFileSize
end

-- 清空下载队列
function __remove_all_download()
    -- 删除以前的下载信息
    local count = Download:getCount(true)
    for i = 1, count do
       Download:delete(i, true, true) 
    end
end

--  下载升级安装包
function downloadPackage()
    local upgradeNode = Sprite:findChild(rootSprite, "upgradeNode")
    Sprite:setProperty(upgradeNode, "enable", "false")
    Sprite:setProperty(upgradeNode, "visible", "false")
    if not g_packageUrl or '' == g_packageUrl then
        Dialog:show('', '返回下载地址为空，版本升级失败！【确定】继续进入，【取消】退出客户端！', 
            'ok_cancel', 'goLogin', 'doExit')
        return
    end
    local noticeLblSprite = Sprite:findChild(rootSprite, "noticeLbl")
    Sprite:setProperty(noticeLblSprite, "text", "升级中...")
    -- 删除缓存
    IO:dirRemove('CACHE:\\com_wondertek_dw', 1)
    -- 隐藏登录和版本检查进度条
    local scrollBarNode = Sprite:findChild(rootSprite, 'scrollBarNode')
    Sprite:setVisible(scrollBarNode, 0)
    Sprite:setEnable(scrollBarNode, 0)
     -- 显示下载进度
    local downloadingNode = Sprite:findChild(rootSprite, 'downloadingNode')
    Sprite:setVisible(downloadingNode, 1)
    Sprite:setEnable(downloadingNode, 1)
    local progress = Sprite:findChild(downloadingNode, 'progressImg')
    local startX,startY,_,startH = Sprite:getRect(progress)
    -- 开始下载
    -- 设置升级方式为全新升级
    Log:write("采用全新升级方式")
    g_updateMethod = 0 
    if IO:fileExist(g_localpath) == true then 
        IO:fileRemove(g_localpath)
        Log:write("全新升级：删除旧的安装文件")
    end  
    Download:append(g_localpath, 'intallPackageName', g_packageUrl, true)
    onGetDownloadStatus()
end

-- 下载差分升级包
function downloadPatch()
    local diffUpdateNode = Sprite:findChild(rootSprite, "diffUpdateNode")
    Sprite:setProperty(diffUpdateNode, "enable", "false")
    Sprite:setProperty(diffUpdateNode, "visible", "false")
    if not g_patchUrl or '' == g_patchUrl then
        Dialog:show('', '增量补丁包下载地址为空，版本升级失败！【确定】继续进入，【取消】退出客户端！', 
            'ok_cancel', 'goLogin', 'doExit')
        return
    end
    local noticeLblSprite = Sprite:findChild(rootSprite, "noticeLbl")
    Sprite:setProperty(noticeLblSprite, "text", "增量升级中...")
    -- 删除缓存
    IO:dirRemove('CACHE:\\com_wondertek_dw', 1)
    -- 隐藏登录和版本检查进度条
    local scrollBarNode = Sprite:findChild(rootSprite, 'scrollBarNode')
    Sprite:setVisible(scrollBarNode, 0)
    Sprite:setEnable(scrollBarNode, 0)
     -- 显示下载进度
    local downloadingNode = Sprite:findChild(rootSprite, 'downloadingNode')
    Sprite:setVisible(downloadingNode, 1)
    Sprite:setEnable(downloadingNode, 1)
    local progress = Sprite:findChild(downloadingNode, 'progressImg')
    local startX,startY,_,startH = Sprite:getRect(progress)
    -- 开始下载
    Log:write("采用增量升级方式")
    g_updateMethod = 1   
    if IO:fileExist(g_localPatchPath) == true then 
        IO:fileRemove(g_localPatchPath)
        Log:write("增量升级：删除旧的补丁文件")
    end
    Download:append(g_localPatchPath, 'intallPackageName', g_patchUrl, true)
    onGetDownloadStatus()
end

--  显示下载状态
function onGetDownloadStatus()
    local count = Download:getCount(true)
    g_downloadTime = g_downloadTime + 0.5
    local progressImg = Sprite:findChild(rootSprite, 'progressImg') -- 下载进度
    local speedLab = Sprite:findChild(rootSprite, 'speedLab')       -- 下载速度
    local proLab = Sprite:findChild(rootSprite, 'proLab')           -- 总体下载进度
    local noticeLbl = Sprite:findChild(rootSprite, "noticeLbl")     -- 通知信息
    
    -- 迭代下载队列
    for i = 1, count do
        local task = Download:getStatus(i, true)
        if task.title == 'intallPackageName' then   
            if task.status == 3 then Download:start(i, true) end
            -- 计算当前的下载百分比
            local percent = 0
            if task.size and task.maxsize and task.maxsize ~= 0 then
                percent = math.floor(task.size / task.maxsize * 100)
            end
            
            if task.status == Download.status.Downloading then -- 下载中
                local x, y, _, h = Sprite:getRect(progressImg)
                Sprite:setRect(progressImg, x, y, g_progressWidth * percent / 100, h)
                Sprite:setProperty(speedLab, 'text', math.floor(task.size / 1024 / g_downloadTime) .. 'KB/S')
                Sprite:setProperty(proLab, 'text', math.floor(task.size/1024) .. 'KB/' .. math.floor(task.maxsize/1024) .. 'KB')
            elseif task.status == Download.status.Finished then -- 下载完毕
                g_downloadTime = 0
                Sprite:setProperty(noticeLbl, 'text', '完成')
                Download:delete(i, false, true)
                Sprite:setProperty(speedLab,'text', '0KB/S')
                Sprite:setProperty(proLab, 'text', math.floor(task.maxsize/1024) .. 'KB/' .. math.floor(task.maxsize/1024) .. 'KB')
                local x, y, _, h = Sprite:getRect(progressImg)
                Sprite:setRect(progressImg, x, y, g_progressWidth * percent / 100, h)
                Http:stopNetwork()
                -- 下载完成
                if g_updateMethod == 0 then 
                    Util:installApp(g_localpath)
                else
                    -- 补丁升级
                    Sprite:setProperty(noticeLbl, 'text', '正在进行补丁合成...')
                    AppManager:applyPatchToOldApk(g_localpath, g_localPatchResult, 
                        g_localPatchPath)
                    -- 删除旧的安装文件
                    if IO:fileExist(g_localpath) == true then 
                        IO:fileRemove(g_localpath)
                        Log:write("删除旧的安装文件成功")
                    end  
                    -- 重命名新的安装文件
                    if IO:fileExist(g_localPatchResult) == true then 
                        IO:fileRename(g_localPatchResult, g_localpath)
                        Log:write("重命名新的安装文件")
                    end
                    -- 安装更新
                    Util:installApp(g_localpath)
                end
                -- 安装成功，重启时引擎将干掉module，清除cache
                IO:dirRemove('CACHE:\\com_wondertek_dw', 1)
                IO:dirCreate('CACHE:\\com_wondertek_dw')
                IO:dirCreate('CACHE:\\com_wondertek_dw\\image')
            end
            break
        end
    end
    Timer:set(111, 500, 'onGetDownloadStatus')
end

-- 获取apk下载路径
function getDownloadPath()
    g_localpath = ""
    local downloadPath = System:getFlashCardName(1) 
    if downloadPath == nil or downloadPath == "" then 
        Log:write("SD卡不存在,使用内部存储！")
        downloadPath = System:getFlashCardName(0)
    end
    g_localpath = downloadPath.."download"
    g_tempPath = downloadPath.."temp"
    Log:write("getDownloadPath: localDir="..g_localpath)
    -- 如果路径不存在，创建下载目录
    if IO:dirExist(g_localpath) == false then 
        IO:dirCreate(g_localpath)
    end
     if IO:dirExist(g_tempPath) == false then 
        IO:dirCreate(g_tempPath)
    end
    -- 如果apk已经存在，删除之
    g_localPatchPath = g_localpath.."/Venus_DW.patch"
    g_localPatchResult = g_localpath.."/Venus_DW_New.apk"
    g_localpath = g_localpath.."/Venus_DW.apk"
    Log:write("getDownloadPath: g_localPatchPath="..g_localPatchPath)
    Log:write("getDownloadPath: g_localpath="..g_localpath)
    -- 返回apk本地路径
    return g_localpath
end

]]>
</root>
